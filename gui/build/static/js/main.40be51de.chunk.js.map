{"version":3,"sources":["assets/logo.svg","global.js","components/Jobpost.js","axiosConfig.js","containers/JobpostListView.js","components/Form.js","containers/JobpostDetailView.js","containers/JobpostCreate.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","containers/LadingPage.js","containers/Profile.js","containers/Comparison.js","containers/LoginHome.js","components/Scan.js","containers/ScanList.js","containers/ScanDetail.js","routes.js","containers/Layout.js","guestRoute.js","components/ErrorBoundary.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","global","SERVER","REST_AUTH","API","REST_AUTH_REGISTER","AUTHENTICATE","LOGIN","JOBPOST","UPLOAD_JOBPOST_IMAGE","Jobposts","props","itemLayout","size","pagination","onChange","page","pageSize","dataSource","data","renderItem","item","Item","key","title","extra","width","alt","img","src","Meta","href","id","description","job_poster_id","post_date","instance","axios","create","baseURL","process","REACT_APP_AXIOS_BASEURL","defaults","headers","common","interceptors","request","use","console","log","error","Promise","reject","response","JobpostList","state","jobposts","get","then","res","setState","Jobpost","this","React","Component","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","CustomForm","componentDidMount","handleFormSubmit","event","requestType","jobpostID","preventDefault","target","elements","value","file","localStorage","getItem","post","status","history","push","catch","err","put","onSubmitCapture","name","label","rules","placeholder","jobpost","message","TextArea","hidden","offset","type","htmlType","btnText","JobpostDetail","handleDelete","match","params","delete","JobpostCreate","authSuccess","token","authFail","logout","removeItem","dispatchLogout","dispatch","checkAuthTimeout","expirationDate","setTimeout","setUserID","username","password","setItem","antIcon","LoadingOutlined","style","fontSize","spin","tailLayout","NormalLoginForm","errorMessage","showIcon","loading","indicator","initialValues","remember","ref","formRef","onFinish","values","onAuth","onFinishFailed","errorInfo","Password","valuePropName","marginRight","to","connect","Date","getTime","actions","formItemLayout","xs","sm","tailFormItemLayout","RegistrationForm","createRef","email","confirm","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","resolve","password1","password2","LandingPage","UserProfile","useState","setUsername","setEmail","setName","location","setLocation","img_salt","setImgSalt","setImg","Text","typeOfImage","proc","userProfilePictureUploadProps","acceptedFiles","multiple","method","action","onRemove","info","success","reloadProfilePicture","reloadUsername","reloadEmail","reloadName","reloadLocation","reloadImgSalt","visible","setVisible","useEffect","gutter","lg","shape","icon","UserOutlined","active","onClickCapture","onCreate","onCancel","useForm","form","okText","cancelText","onOk","validateFields","resetFields","modifier","newEmail","newName","newLocation","Comparison","jobid","projectid","jobtitle","jdtitle","jddescription","projtitle","projlink","url","project_owner_id","userid","tip","spinning","LoginHome","color","parseDate","date","parts","split","toDateString","Scan","grid","md","xl","xxl","pk","hoverable","cover","percent","fields","matchpercent","EditOutlined","DeleteOutlined","posted_date","ScanList","scans","fetchMyScans","uid","ScanDetail","cat","subcat","structure","processed","matchID","axiosConfig","existsInProject","row","i","length","trim","CheckCircleTwoTone","float","twoToneColor","CloseCircleTwoTone","componentDidUpdate","listStyleType","map","Fragment","BaseRouter","exact","path","component","Login","Signup","Header","Content","Footer","CustomLayout","SubMenu","ItemGroup","className","theme","mode","defaultSelectedKeys","lineHeight","logo","LogoutOutlined","QuestionCircleOutlined","FolderOpenOutlined","PlusCircleOutlined","padding","children","textAlign","GuestRouter","ErrorBoundary","hasError","App","document","onTryAutoSignup","isAuthenticated","undefined","Boolean","window","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","authLogout","reducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,kC,iFCA3CC,cAAOC,OAAS,kBAEhBD,EAAOE,UAAY,aACnBF,EAAOG,IAAM,UAGbH,EAAOI,mBAAqBJ,EAAOC,OAASD,EAAOG,IAAMH,EAAOE,UAAY,gBAC5EF,EAAOK,aAAeL,EAAOC,OAAS,gBACtCD,EAAOM,MAAQN,EAAOC,OAASD,EAAOG,IAAMH,EAAOE,UAAY,mBAE/DF,EAAOO,QAAUP,EAAOC,OAAS,WACjCD,EAAOQ,qBAAuBR,EAAOC,OAAS,0B,uNC6B/BQ,EAnCE,SAACC,GACd,OACI,uBACAC,WAAW,WACXC,KAAK,QACLC,WAAY,CACZC,SAAU,SAAAC,KAGVC,SAAU,GAEVC,WAAYP,EAAMQ,KAClBC,WAAY,SAAAC,GAAI,OAChB,sBAAMC,KAAN,CACIC,IAAKF,EAAKG,MAEVC,MACA,yBACIC,MAAM,QACNC,IAAKN,EAAKO,IACVC,IAAKR,EAAKO,OAIlB,sBAAMN,KAAKQ,KAAX,CACEN,MAAO,uBAAGO,KAAM,YAAcV,EAAKW,IAAMX,EAAKG,OAC9CS,YAAa,aAAeZ,EAAKa,cAAgB,OAASb,EAAKc,YAEhEd,EAAKY,iB,SC9BRG,E,OAAWC,EAAMC,OAAO,CAE1BC,QAASC,mHAAYC,0BAIzBL,EAASM,SAASC,QAAQC,OAA1B,cAAoD,2BAKpDR,EAASS,aAAaC,QAAQC,KAAI,SAAAD,GAG9B,OAFAE,QAAQC,IAAIH,GAELA,KACR,SAAAI,GAEC,OADAF,QAAQC,IAAIC,GACLC,QAAQC,OAAOF,MAG1Bd,EAASS,aAAaQ,SAASN,KAAI,SAAAM,GAG/B,OAFAL,QAAQC,IAAII,GAELA,KACR,SAAAH,GAEC,OADAF,QAAQC,IAAIC,GACLC,QAAQC,OAAOF,MAIXd,QCCAkB,E,2MAzBXC,MAAQ,CACJC,SAAU,I,mFAGO,IAAD,OAChBnB,EAAMoB,IAAI,YACLC,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVJ,SAAUG,EAAIxC,Y,+BAO1B,OACI,6BACK,kBAAC0C,EAAD,CAAU1C,KAAM2C,KAAKP,MAAMC,WAC5B,kC,GApBUO,IAAMC,W,2FCA1BC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAIJE,EAAmB,CACvBC,SAAU,0BACVC,MAAO,CACLC,OAAQ,2BA0JGC,E,YA5HX,WAAY9D,GAAO,IAAD,8BAChB,4CAAMA,KAMR+D,kBAAoB,aAPF,EAWlBC,iBAAmB,SAACC,EAAOC,EAAaC,GACpCF,EAAMG,iBACN,IAAMvD,EAAQoD,EAAMI,OAAOC,SAASzD,MAAM0D,MACpCjD,EAAc2C,EAAMI,OAAOC,SAAShD,YAAYiD,MAGhDhD,GAFW0C,EAAMI,OAAOC,SAASE,KAEjBC,aAAaC,QAAQ,kBAK3C,OAAOR,GACH,IAAK,OACF,OAAOxC,EAAMiD,KAAK,iCAAkC,CAC/C9D,MAAOA,EACPS,YAAaA,EACbC,cAAeA,IAGlBwB,MAAK,SAAAC,GACJX,QAAQC,IAAIU,GACK,OAAdA,EAAI4B,QACL,EAAK5E,MAAM6E,QAAQC,KAAK,YAAc9B,EAAIxC,KAAKa,GAAK,QAGvD0D,OAAM,SAAAxC,GAAK,OAAI,EAAKU,SAAS,CAAC+B,IAAKzC,OAExC,IAAK,MACD,OAAOb,EAAMuD,IAAI,iCAAmCd,EAAY,IAAK,CACjEtD,MAAOA,EACPS,YAAaA,EACbC,cAAeA,IAGlBwB,MAAK,SAAAC,GAAG,OAAIX,QAAQC,IAAIU,MACxB+B,OAAM,SAAAxC,GAAK,OAAIF,QAAQE,MAAMA,QA5CxC,EAAKK,MAAQ,CACXoC,IAAK,MAHS,E,sEAoDT,IAAD,OACJ,OACI,qCAAME,gBAAiB,SAACjB,GAAD,OAAW,EAAKD,iBACnCC,EACA,EAAKjE,MAAMkE,YACX,EAAKlE,MAAMmE,aACJb,EAJX,CAImB6B,KAAK,gBAAgBzB,iBAAkBA,IACxD,sBAAM/C,KAAN,CACEyE,MAAM,QACNC,MAAO,CACL,CACE1B,UAAU,KAId,uBAAOwB,KAAK,QAAQG,YACQ,OAA1BnC,KAAKnD,MAAMkE,YACTf,KAAKnD,MAAMuF,QAAQ1E,MAEnB,mBAIN,sBAAMF,KAAN,CAAWyE,MAAM,cACjBC,MAAO,CACH,CACE1B,UAAU,EACV6B,QAAQ,+BAEZ,sBAAOC,SAAP,CAAgBN,KAAK,cAAcG,YACP,OAA1BnC,KAAKnD,MAAMkE,YACTf,KAAKnD,MAAMuF,QAAQjE,YAEnB,yBAuBN,sBAAMX,KAAN,CACE+E,OAA0B,MAAlBvC,KAAKP,MAAMoC,MAIrB,sBAAMrE,KAAN,CAAW8C,WAAU,eAAOH,EAAOG,WAAd,CAA0BkC,OAAQ,KACrD,uBAAQC,KAAK,UAAUC,SAAS,UAC7B1C,KAAKnD,MAAM8F,e,GArHL1C,IAAMC,WCehB0C,E,2MArDXnD,MAAQ,CACJ2C,QAAS,I,EAmBbS,aAAe,SAAC/B,GACZ,IAAME,EAAY,EAAKnE,MAAMiG,MAAMC,OAAO/B,UAC1CzC,EAAMyE,OAAO,WAAahC,EAAY,M,mFAlBrB,IAAD,OACVA,EAAYhB,KAAKnD,MAAMiG,MAAMC,OAAO/B,UAC1CzC,EAAMoB,IAAI,WAAaqB,EAAY,KAC9BpB,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVsC,QAASvC,EAAIxC,UAGpBuE,OAAM,SAAAC,GACoB,OAAvBA,EAAItC,SAASkC,OACT,EAAK5E,MAAM6E,QAAQC,KAAK,KAExBzC,QAAQC,IAAI,gB,+BAUxB,OACG,6BACK,uBAAMzB,MAAOsC,KAAKP,MAAM2C,QAAQ1E,OAC5B,2BAAIsC,KAAKP,MAAM2C,QAAQjE,cAGW,OAAtC6B,KAAKnD,MAAMiG,MAAMC,OAAO/B,UAExB,6BACI,kBAAC,EAAD,iBAAgBhB,KAAKP,MAArB,CACAsB,YAAY,MACZC,UAAWhB,KAAKnD,MAAMiG,MAAMC,OAAO/B,UACnC2B,QAAQ,YACR,0BAAMZ,gBAAiB/B,KAAK6C,cACxB,uBAAQJ,KAAK,SAASC,SAAS,UAA/B,YAMJ,qD,GAhDQzC,IAAMC,WCuBnB+C,E,2MAvBXxD,MAAQ,CACJC,SAAU,I,qHAQV,OACI,6BACA,6BACA,2CACA,kBAAC,EAAD,eACIqB,YAAY,OACZC,UAAW,KACX2B,QAAQ,UACJ3C,KAAKnD,a,GAnBGoD,IAAMC,W,qDCKrBgD,G,OAAc,SAAAC,GACvB,MAAO,CACHV,KCXoB,eDYpBU,MAAOA,KAIFC,EAAW,SAAAhE,GACpB,MAAM,CACFqD,KCjBiB,YDkBjBrD,MAAOA,IAIFiE,EAAS,WAQlB,OANA/B,aAAagC,WAAW,iBACxBhC,aAAagC,WAAW,QACxBhC,aAAagC,WAAW,SACxBhC,aAAagC,WAAW,kBAGjB,CACHb,KC9BmB,gBDkCdc,EAAiB,WAC1B,OAAO,SAAAC,GACHA,EAASH,OAIJI,EAAmB,SAAAC,GAC5B,OAAO,SAAAF,GACHG,WAAWJ,EAAiC,KAAjBG,EAAwB,IAAO,OAIrDE,EAAY,SAACC,EAAUC,GAC5BvF,EAAMiD,KAAK,gBAAiB,CACpBqC,SAAUA,EACVC,SAAUA,IACXlE,MAAK,SAAAC,GAAG,OAAIyB,aAAayC,QAAQ,gBAAiBlE,EAAIxC,KAAKa,Q,SE7CpE8F,EAAU,kBAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAExDjE,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAGJgE,EAAa,CACjB/D,WAAY,CACVkC,OAAQ,EACRnC,KAAM,KAGJiE,E,iLAEM,IAAD,OAcHC,EAAe,KAWnB,OATGvE,KAAKnD,MAAMuC,QACVmF,EAEI,uCAAWF,EAAX,CAAuBhC,QAAU,2CAA2CI,KAAK,QAAQ+B,UAAQ,MAOrG,6BAGQxE,KAAKnD,MAAM4H,QAEX,uBAAMC,UAAWV,IAKnB,uCACI7D,EADJ,CAEAwE,cAAe,CACXC,UAAU,GAEdC,IAAK7E,KAAK8E,QACV/C,gBAjCO,SAAAjB,GACbA,EAAMG,kBAiCA8D,SAzCO,SAAAC,GACb,EAAKnI,MAAMoI,OAAOD,EAAOnB,SAAUmB,EAAOlB,WAyCpCoB,eAtCa,SAAAC,OAwCb,sBAAM3H,KAAN,CACIyE,MAAM,WACND,KAAK,WACLE,MAAO,CACP,CACI1B,UAAU,EACV6B,QAAS,iCAIb,6BAGJ,sBAAM7E,KAAN,CACIyE,MAAM,WACND,KAAK,WACLE,MAAO,CACP,CACI1B,UAAU,EACV6B,QAAS,iCAIb,sBAAO+C,SAAP,OAGJ,sBAAM5H,KAAN,iBAAe6G,EAAf,CAA2BrC,KAAK,WAAWqD,cAAc,YACrD,2CAGJ,sBAAM7H,KAAS6G,EACX,uBAAQ5B,KAAK,UAAUC,SAAS,UAAhC,SADJ,MAII,kBAAC,IAAD,CAASwB,MAAO,CAACoB,YAAa,QAC9BC,GAAG,YADH,YAMDhB,Q,GAxFatE,IAAMC,WA8GrBsF,eAbS,SAAC/F,GACrB,MAAO,CACHgF,QAAShF,EAAMgF,QACfrF,MAAOK,EAAML,UAIM,SAAAoE,GACvB,MAAO,CACHyB,OAAQ,SAACpB,EAAUC,GAAX,OAAwBN,EF1Ef,SAACK,EAAUC,GAChC,OAAO,SAAAN,GACHA,EArDE,CACFf,KCNkB,eD2DlBlE,EAAMiD,KAAK,0BAA0B,CACjCqC,SAAUA,EACVC,SAAUA,IAEblE,MAAM,SAAAC,GAIH+D,EAAUC,EAAUC,GAEpB,IAAMX,EAAQtD,EAAIxC,KAAKI,IACjBiG,EAAiB,IAAI+B,MAAK,IAAIA,MAAOC,UAAY,MACvDpE,aAAayC,QAAQ,QAASZ,GAC9B7B,aAAayC,QAAQ,iBAAkBL,GACvCF,EAASN,EAAYC,IACrBK,EAASC,EAAiB,UAE7B7B,OAAM,SAAAC,GACH2B,EAASJ,EAASvB,QEqDmB8D,CAAkB9B,EAAUC,QAI9D0B,CAA6ClB,GCzHtDsB,EAAiB,CACrBxF,SAAU,CACRyF,GAAI,CACFxF,KAAM,IAERyF,GAAI,CACFzF,KAAM,IAGVC,WAAY,CACVuF,GAAI,CACFxF,KAAM,IAERyF,GAAI,CACFzF,KAAM,MAKN0F,EAAqB,CACvBzF,WAAY,CACVuF,GAAI,CACFxF,KAAM,GACNmC,OAAQ,GAEVsD,GAAI,CACFzF,KAAM,GACNmC,OAAQ,KAMVwD,E,2MAEFlB,QAAU7E,IAAMgG,Y,wEAIH,IAAD,OAaJ,OACI,uCACML,EADN,CAEE5D,KAAK,WACL+C,SAfW,SAAAC,GACf,EAAKnI,MAAMoI,OACPD,EAAOnB,SACPmB,EAAOkB,MACPlB,EAAOlB,SACPkB,EAAOmB,SAEX,EAAKtJ,MAAM6E,QAAQC,KAAK,KACxBzC,QAAQC,IAAI,4BAA6B6F,IAQrCoB,oBAAkB,IAEhB,sBAAM5I,KAAN,CACUyE,MAAM,WACND,KAAK,WACLE,MAAO,CACP,CACI1B,UAAU,EACV6B,QAAS,iCAIb,6BAEZ,sBAAM7E,KAAN,CACEwE,KAAK,QACLC,MAAM,SACNC,MAAO,CACL,CACEO,KAAM,QACNJ,QAAS,kCAEX,CACE7B,UAAU,EACV6B,QAAS,+BAIb,6BAGF,sBAAM7E,KAAN,CACEwE,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CACE1B,UAAU,EACV6B,QAAS,gCAGbgE,aAAW,GAEX,sBAAOjB,SAAP,OAGF,sBAAM5H,KAAN,CACEwE,KAAK,UACLC,MAAM,mBACNqE,aAAc,CAAC,YACfD,aAAW,EACXnE,MAAO,CACL,CACE1B,UAAU,EACV6B,QAAS,iCAEX,gBAAGkE,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMrF,GACd,OAAKA,GAASmF,EAAc,cAAgBnF,EAIrC/B,QAAQC,OAAO,oDAHbD,QAAQqH,eAQvB,sBAAOtB,SAAP,OAGF,sBAAM5H,KAAN,eAAWwE,KAAK,YAAYqD,cAAc,WAAcU,GACtD,8CACkB,uBAAG9H,KAAK,IAAR,eAIpB,sBAAMT,KAASuI,EACH,uBAAQtD,KAAK,UAAUC,SAAS,UAAhC,UADZ,MAIY,kBAAC,IAAD,CAASwB,MAAO,CAACoB,YAAa,QAC9BC,GAAG,WADH,gB,GAvGCtF,IAAMC,WA8HtBsF,eAbS,SAAC/F,GACrB,MAAO,CACHgF,QAAShF,EAAMgF,QACfrF,MAAOK,EAAML,UAIM,SAAAoE,GACvB,MAAO,CACHyB,OAAQ,SAACpB,EAAUqC,EAAOS,EAAWC,GAA7B,OAA2CpD,EHtFjC,SAACK,EAAUqC,EAAOS,EAAWC,GACnD,OAAO,SAAApD,GACHA,EA/EE,CACFf,KCNkB,eDqFlBlE,EAAMiD,KAAK,iCAAiC,CACxCqC,SAAUA,EACV8C,UAAWA,EACXC,UAAWA,EACXV,MAAOA,IAEVtG,MAAM,SAAAC,GACH+D,EAAUC,EAAU8C,GACpB,IAAMxD,EAAQtD,EAAIxC,KAAKI,IACjBiG,EAAiB,IAAI+B,MAAK,IAAIA,MAAOC,UAAY,MACvDpE,aAAayC,QAAQ,QAASZ,GAC9B7B,aAAayC,QAAQ,iBAAkBL,GACvCF,EAASN,EAAYC,IACrBK,EAASC,EAAiB,UAE7B7B,OAAM,SAAAC,GACH2B,EAASJ,EAASvB,QGmEsC8D,CAAmB9B,EAAUqC,EAAOS,EAAWC,QAIpGpB,CAA6CQ,GCtJ7Ca,E,2MAfXpH,MAAQ,G,qHAOJ,OACI,0C,GAVcQ,IAAMC,W,uKCyTjB4G,OAtTf,WAAwB,IAAD,EACYC,mBAAS,IADrB,oBACblD,EADa,KACHmD,EADG,OAEMD,mBAAS,IAFf,oBAEbb,EAFa,KAENe,EAFM,OAGIF,mBAAS,IAHb,oBAGb/E,EAHa,KAGPkF,EAHO,OAIYH,mBAAS,IAJrB,oBAIbI,EAJa,KAIHC,EAJG,OAKWL,mBAAS,IALpB,oBAKbM,EALa,KAKHC,EALG,OAMEP,mBAAS,MANX,oBAMbjJ,EANa,KAMRyJ,EANQ,KAQXC,EARW,KAQXA,KAGFC,EAAc,SAACC,GACjB,MAAO,CAAC,KAAS,cAAe,QAAWA,EAAM,SAAYL,IAG3DM,EAAgC,CAClC3F,KAAM,OACN4F,cAAe,OACfC,UAAU,EACVC,OAAQ,OACRzK,KAAMoK,EAAY,UAClBM,OAAQ,gBACRC,SAPkC,SAOzB3G,GAELnC,QAAQC,IAAIkC,GAEZ9C,EAAMiD,KAAK,gBAAX,aACI,KAAQH,EAAKW,MACVyF,EAAY,aAKvBxK,SAlBkC,SAkBzBgL,GAAO,IACNxG,EAAWwG,EAAK5G,KAAhBI,OAIO,SAAXA,EACFY,EAAA,EAAQ6F,QAAR,UAAmBD,EAAK5G,KAAKW,KAA7B,iCACoB,UAAXP,GACTY,EAAA,EAAQjD,MAAR,UAAiB6I,EAAK5G,KAAKW,KAA3B,yBAEFmG,MAwBAC,EAAiB,SAAC/K,GACpB2J,EAAY3J,IAGVgL,EAAc,SAAChL,GACjB4J,EAAS5J,IAGPiL,EAAa,SAACjL,GAChB6J,EAAQ7J,IAGNkL,EAAiB,SAAClL,GACpB+J,EAAY/J,IAGVmL,EAAgB,SAACnL,GACnBiK,EAAWjK,IAOT8K,EAAuB,WACzBjJ,QAAQC,IAAIsI,EAAY,UACxBlJ,EAAMiD,KAAK,gBAAX,eACOiG,EAAY,WAElB7H,MACG,SAAAC,GAVU,IAACxC,EAYO,MAAfwC,EAAI4B,OAEHvC,QAAQC,IAAIU,GAGQ,MAAfA,EAAI4B,QAA+B,0BAAb5B,EAAIxC,OAC/B6B,QAAQC,IAAIU,GAlBLxC,EAmBGwC,EAAIxC,KAlBtBkK,EAAOlK,OAqBNuE,OAAM,SAAAC,GACH3C,QAAQC,IAAI0C,OA9GD,EAyLekF,oBAAS,GAzLxB,oBAyLR0B,EAzLQ,KAyLCC,EAzLD,KA8NnB,OANAC,qBAAU,WAxKVpK,EAAMoB,IAAI,eAAiB2B,aAAaC,QAAQ,kBAC/C3B,MAAM,SAAAC,GAIHuI,EAAevI,EAAIxC,KAAJ,UACfgL,EAAYxI,EAAIxC,KAAJ,OACZiL,EAAWzI,EAAIxC,KAAJ,MACXkL,EAAe1I,EAAIxC,KAAJ,UACfmL,EAAc3I,EAAIxC,KAAJ,UAEdsG,YAAW,kBAAMtB,EAAA,EAAQ6F,QAAQ,kCAAiC,QAGrEtG,OAAM,SAAAC,GACHQ,EAAA,EAAQjD,MAAM,2CAA6CyC,EAAIQ,cA2JhE,IAKK,6BACK8F,IAED,wBAAKS,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IAEzC,MAAP1E,EACI,wBAAQgL,MAAM,SAAS/L,KAAK,QAAQgM,KAAO,kBAACC,GAAA,EAAD,QAE/C,yBAAKjL,IAAG,gCAA2BD,MAG3C,wBAAK+H,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,8CAIR,wBAAKoG,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAYmF,EACR,uBACI5K,KAAK,SADT,oBAMR,wBAAK8I,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAOzF,KAAO,SACV,yCACA,2BAAgB,MAAZ8G,EAAmB,kBAAC2D,EAAD,CAAM/E,KAAK,UAAX,sBAAgDoB,MAKnF,wBAAK+E,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,KAExD,wBAAKqD,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAOzF,KAAO,SACV,qCACA,2BAAY,MAARiF,EAAe,kBAACwF,EAAD,CAAM/E,KAAK,UAAX,kBAA4CT,MAK3E,wBAAK4G,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,KAExD,wBAAKqD,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAOzF,KAAO,SACV,sCACA,2BAAa,MAATmJ,EAAgB,uBAAU+C,QAAM,IAAM/C,MAKtD,wBAAK0C,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,KAExD,wBAAKqD,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAOzF,KAAO,SACV,yCACA,2BAAgB,MAAZoK,EAAmB,kBAACK,EAAD,CAAM/E,KAAK,UAAX,oBAA8C0E,MAKjF,wBAAKyB,OAAQ,CAAC,EAAG,KACb,wBAAK/C,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,KAGxD,wBAAKqD,GAAI,CAAExF,KAAM,EAAGmC,OAAQ,GAAKqG,GAAI,CAAExI,KAAM,EAAGmC,OAAQ,IACpD,uBAAQC,KAAK,UAAUyG,eAAgB,kBAAMR,GAAW,KAAxD,UAIJ,mBAzLa,SAAC,GAAqC,IAAnCD,EAAkC,EAAlCA,QAASU,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EAC/C,IAAKC,UAAbC,EADuD,qBAE9D,OACE,wBACEb,QAASA,EACT/K,MAAM,iBACN6L,OAAO,SACPC,WAAW,SACXJ,SAAUA,EACVK,KAAM,WACJH,EACGI,iBACA9J,MAAK,SAAAoF,GACJsE,EAAKK,cACLR,EAASnE,MAEVpD,OAAM,SAAAqG,GACL/I,QAAQC,IAAI,mBAAoB8I,QAItC,uBACEqB,KAAMA,EACNnJ,OAAO,WACP6B,KAAK,gBACL2C,cAAe,CACbiF,SAAU,WAGZ,sBAAMpM,KAAN,CACEwE,KAAK,OACLC,MAAM,OACNC,MAAO,CACL,CACEG,QAAS,kCAIb,uBAAOF,YAAaH,KAGtB,sBAAMxE,KAAN,CACEwE,KAAK,OACLC,MAAM,QACNC,MAAO,CACL,CACEG,QAAS,2BACTI,KAAM,WAIV,uBAAON,YAAa+D,KAGtB,sBAAM1I,KAAN,CACEwE,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CACEG,QAAS,iCAIb,uBAAOF,YAAagF,SA0HhB,CACIsB,QAASA,EACTU,SAjHC,SAAAnE,GACb9F,QAAQC,IAAI,4BAA6B6F,GAEzC,IAAI6E,EAA2B,MAAhB7E,EAAOkB,MAAgBA,EAAQlB,EAAOkB,MACjD4D,EAAyB,MAAf9E,EAAOhD,KAAeA,EAAOgD,EAAOhD,KAC9C+H,EAAiC,MAAnB/E,EAAOmC,SAAmBA,EAAWnC,EAAOmC,SAE9D5I,EAAMuD,IAAI,sBAAwBR,aAAaC,QAAQ,iBAAiB,CACpE2E,MAAO2D,EACP7H,KAAM8H,EACN3C,SAAU4C,IAEbnK,MAAK,SAAAC,GACFwI,EAAYxI,EAAIxC,KAAJ,OACZiL,EAAWzI,EAAIxC,KAAJ,MACXkL,EAAe1I,EAAIxC,KAAJ,UACfmL,EAAc3I,EAAIxC,KAAJ,UACdsG,YAAW,kBAAMtB,EAAA,EAAQ6F,QAAQ,mCAAkC,QAEtEtG,OAAM,SAAAC,GACHQ,EAAA,EAAQjD,MAAM,4CAA8CyC,EAAIQ,YAIpEqG,GAAW,IA0FCU,SAAU,WACVV,GAAW,QChT7BvI,GAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAIJE,GAAmB,CACvBC,SAAU,0BACVC,MAAO,CACLC,OAAQ,2BAgKGsJ,G,2MA1JXvK,MAAQ,CACJwK,MAAO,KACPC,UAAW,KACXC,SAAU,M,EAGd1F,SAAU,E,EAKV5D,iBAAmB,SAACC,GAChBA,EAAMG,iBAEN,IAAMvD,EAAQoD,EAAMI,OAAOC,SAASiJ,QAAQhJ,MACtCjD,EAAc2C,EAAMI,OAAOC,SAASkJ,cAAcjJ,MAClDkJ,EAAYxJ,EAAMI,OAAOC,SAASmJ,UAAUlJ,MAC5CmJ,EAAWzJ,EAAMI,OAAOC,SAASoJ,SAASnJ,MAE1ChD,EAAgBkD,aAAaC,QAAQ,iBAI3C,EAAKkD,SAAU,EAGTlG,EAAMiD,KAAK,WAAY,CACjB9D,MAAOA,EACPS,YAAaA,EACbC,cAAeA,IAGlBwB,MAAK,SAAAC,GAEa,OAAdA,EAAI4B,SACL,EAAK3B,SAAS,CAACmK,MAAOpK,EAAIxC,KAAKa,KAE/BK,EAAMiD,KAAK,WAAY,CACnB9D,MAAO4M,EACPE,IAAKD,EACLE,iBAAkBrM,IAErBwB,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAACqK,SAAUzM,IAER,OAAdmC,EAAI4B,SACL,EAAK3B,SAAS,CAACoK,UAAWrK,EAAIxC,KAAKa,KAE7BK,EAAMiD,KAAK,gBAAiB,CAC1BkJ,OAAQtM,EACR6L,MAAO,EAAKxK,MAAMwK,MAClBC,UAAW,EAAKzK,MAAMyK,UACtBC,SAAU,EAAK1K,MAAM0K,WAExBvK,MAAK,SAAAC,GAEa,OAAdA,EAAI4B,QAGL,EAAK5E,MAAM6E,QAAQC,KAAK,QAAU9B,EAAIxC,KAAJ,WAKrCuE,OAAM,SAAAxC,GAAK,OAAI,EAAKU,SAAS,CAAC+B,IAAKzC,WAI3CwC,OAAM,SAAAxC,GAAK,OAAI,EAAKU,SAAS,CAAC+B,IAAKzC,WAGvCwC,OAAM,SAAAxC,GAAK,OAAI,EAAKU,SAAS,CAAC+B,IAAKzC,Q,qHAGvC,IAAD,OACJ,OACI,6BACA,6BACA,uBAAMuL,IAAI,aAAaC,SAAU5K,KAAKyE,SAEtC,wCACA,qCAAM1C,gBAAiB,SAACjB,GAAD,OAAW,EAAKD,iBACnCC,KACOX,GAFX,CAEmB6B,KAAK,gBAAgBzB,iBAAkBA,KAExD,sBAAM/C,KAAN,CACEyE,MAAM,gBACNC,MAAO,CACL,CACE1B,UAAU,KAId,uBAAOwB,KAAK,YAAYG,YACpB,mBAIN,sBAAM3E,KAAN,CACEyE,MAAM,eACNC,MAAO,CACL,CACE1B,UAAU,KAId,uBAAOwB,KAAK,WAAWG,YACnB,iCAKN,sBAAM3E,KAAN,CACEyE,MAAM,YACNC,MAAO,CACL,CACE1B,UAAU,KAId,uBAAOwB,KAAK,UAAUG,YAClB,kCAIN,sBAAM3E,KAAN,CAAWyE,MAAM,cACjBC,MAAO,CACH,CACE1B,UAAU,EACV6B,QAAQ,iCAEZ,sBAAOC,SAAP,CAAgBN,KAAK,gBAAgBG,YACjC,yBAIN,sBAAM3E,KAAN,CACE+E,OAA0B,MAAlBvC,KAAKP,MAAMoC,MAIrB,sBAAMrE,KAAN,CAAW8C,WAAU,eAAOH,GAAOG,WAAd,CAA0BkC,OAAQ,KACrD,uBAAQC,KAAK,UAAUC,SAAS,SAAS+B,QAASzE,KAAKyE,SAAvD,oB,GAhJSxE,IAAMC,WCChB2K,G,2MAjBXpL,MAAQ,G,qHAOJ,OACI,6BACI,wBAAIyE,MAAO,CAAC4G,MAAO,QAAnB,gBACA,kDACA,uBAAQrI,KAAK,WAAU,kBAAC,IAAD,CAAM8C,GAAG,cAAT,kB,GAbftF,IAAMC,W,sCCGtBlC,G,IAAAA,KAEF+M,GAAY,SAACC,GACf,IAAIC,EAAQD,EAAKE,MAAM,KAEvB,OADQ,IAAIzF,KAAKwF,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAGC,MAAM,KAAK,IAChDC,gBAuDEC,GArDF,SAACvO,GACV,OACI,uBACAwO,KAAM,CACJzC,OAAQ,GACR/C,GAAI,EACJC,GAAI,EACJwF,GAAI,EACJzC,GAAI,EACJ0C,GAAI,EACJC,IAAK,GAGPxO,WAAY,CACRC,SAAU,SAAAC,KAGVC,SAAU,IAEdC,WAAYP,EAAMQ,KAClBC,WAAY,SAAAC,GAAI,OACd,sBAAMC,KAAN,KAEE,kBAAC,IAAD,CAAM+H,GAAI,QAAUhI,EAAKkO,IACzB,uBAEAC,WAAS,EACTjH,SAASlH,EAGboO,MACI,wBAAUlJ,KAAK,SAASmJ,QAASrO,EAAKsO,OAAOC,aAAuC,IAAzBvO,EAAKsO,OAAOC,aAAmB,IAG5FnG,QAAS,CACP,kBAACoG,GAAA,EAAD,CAActO,IAAI,SAClB,kBAACuO,GAAA,EAAD,CAAgBvO,IAAI,aAIpB,kBAACO,GAAD,CAEIN,MAAQH,EAAKsO,OAAOnO,MAAQH,EAAKsO,OAAOnO,MAAQ,sBAChDS,YAAa,cAAgB4M,GAAUxN,EAAKsO,OAAOI,sBCpBpDC,G,2MA7BXzM,MAAQ,CACJ0M,MAAO,I,EAGXC,aAAe,a,mFAIM,IAAD,OAChB7N,EAAMiD,KAAK,YAAa,CAChB6K,IAAK/K,aAAaC,QAAQ,mBAEjC3B,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAAIxC,MAChB,EAAKyC,SAAS,CAACqM,MAAOtM,EAAIxC,Y,+BAK9B,OACI,6BACK,kBAAC,GAAD,CAAMA,KAAM2C,KAAKP,MAAM0M,QACxB,kC,GAxBOlM,IAAMC,W,sCCmJdoM,G,2MAhJXC,IAAM,K,EAENC,OAAS,K,EAETvK,MAAQ,K,EAERxC,MAAQ,CACJqD,MAAO,GACP2J,UAAW,KACXC,UAAW,M,EA4Bf7J,aAAe,SAAC/B,GACZ,IAAM6L,EAAU,EAAK9P,MAAMiG,MAAMC,OAAO4J,QACxCC,EAAY5J,OAAO,SAAW2J,EAAU,M,EAG5CE,gBAAkB,SAACC,GACf,GAAG,EAAKrN,MAAMqD,MAAX,WACC,IAAI,IAAIiK,EAAE,EAAEA,EAAE,EAAKtN,MAAMqD,MAAX,WAA+BkK,OAAOD,IAChD,GAAG,EAAKtN,MAAMqD,MAAX,WAA+BiK,GAAGE,QAAUH,EAAIG,OAC/C,OAAO,kBAACC,GAAA,EAAD,CAAoBhJ,MAAO,CAAEC,SAAU,SAAUgJ,MAAO,SAAWC,aAAa,YAMnG,OAAO,kBAACC,GAAA,EAAD,CAAoBnJ,MAAO,CAAEC,SAAU,OAAQgJ,MAAO,SAAWC,aAAa,a,EAIzFE,mBAAqB,a,mFA5CA,IAAD,OACVX,EAAU3M,KAAKnD,MAAMiG,MAAMC,OAAO4J,QACxCC,EAAYjN,IAAI,SAAWgN,EAAU,KAChC/M,MAAK,SAAAC,GACe,KAAdA,EAAI4B,SACH,EAAK3B,SAAS,CACVgD,MAAOjD,EAAIxC,OAGfuP,EAAYjN,IAAI,uBACfC,MAAK,SAAAC,GACe,KAAdA,EAAI4B,QACH,EAAK3B,SAAS,CAAC2M,UAAW5M,EAAIxC,cAK7CuE,OAAM,SAAAC,S,+BAgCN,IAAD,OAUJ,OARG7B,KAAKP,MAAMgN,WAAazM,KAAKP,MAAMqD,MAAX,iBACvB9C,KAAKuM,IAAMvM,KAAKP,MAAMgN,UAAU,GAAGzM,KAAKP,MAAMqD,MAAX,gBAAoC,GAAGoI,MAAM,KAAK,IACrFlL,KAAKwM,OAASxM,KAAKP,MAAMqD,MAAX,gBAAoC,GAAGoI,MAAM,KAAK,GAChElL,KAAKiC,MAAQjC,KAAKP,MAAMqD,MAAX,gBAAoC,GAAGoI,MAAM,KAAK,IAO/D,4BACI,wBAAK7K,KAAM,IACf,wBAAKA,KAAM,GAAG,wBAAUoC,KAAK,SAASmJ,QAAS5L,KAAKP,MAAMqD,MAAMgJ,aAA4C,IAA9B9L,KAAKP,MAAMqD,MAAMgJ,aAAmB,KAK1E,OAApC9L,KAAKnD,MAAMiG,MAAMC,OAAO4J,QAExB,wBAAKtM,KAAM,GACDL,KAAKP,MAAMgN,WAAazM,KAAKP,MAAMqD,MAAX,gBAC1B,yBAAKoB,MAAO,CAAEqJ,cAAe,SACzB,4BAAKvN,KAAKP,MAAMgN,UAAU,GAAGzM,KAAKiC,QAClC,4BAAKjC,KAAKP,MAAMgN,UAAU,GAAGzM,KAAKwM,SAI9BxM,KAAKP,MAAMqD,MAAX,gBAAoC0K,KAAI,SAACjQ,EAAME,GAC3C,IAAIwN,EAAQ1N,EAAK2N,MAAM,KAEvB,OAAG,EAAKsB,SAAWvB,EAAM,IAgBrB,EAAKuB,OAASvB,EAAM,GACpB,EAAKhJ,MAAQgJ,EAAM,GAEnB,kBAAC,IAAMwC,SAAP,CAAgBhQ,IAAKA,GACjB,4BACI,EAAK8O,MAAQ,EAAK9M,MAAMgN,UAAU,GAAG,EAAKxK,OAC1C,GAEA,EAAKsK,IAAM,EAAK9M,MAAMgN,UAAU,GAAG,EAAKxK,QAE5C,4BAAK,EAAKxC,MAAMgN,UAAU,GAAGxB,EAAM,KACnC,2BAAI,EAAKxL,MAAMgN,UAAU,GAAGxB,EAAM,IACzC,EAAK4B,gBAAgB,EAAK5K,UA3BpB,EAAKA,OAASgJ,EAAO,IACpB,EAAKhJ,MAAQgJ,EAAM,GAEf,kBAAC,IAAMwC,SAAP,CAAgBhQ,IAAKA,GACjB,2BAAI,EAAKgC,MAAMgN,UAAU,GAAGxB,EAAM,IAAK,EAAK4B,gBAAgB,EAAK5K,eAJ7E,MAqChB,8BAMJ,oD,GA3IKhC,IAAMC,WC2BhBwN,GAnBI,kBACf,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,UAAYhD,KACnC,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAM,aAAaC,UAAY7D,KAC5C,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAM,aAAaC,UAAY3B,KAC5C,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAM,iBAAiBC,UAAYvB,KAEhD,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAM,QAAQC,UAAYrO,IACvC,kBAAC,IAAD,CAAOmO,OAAK,EAACC,KAAM,sBAAsBC,UAAYjL,IACrD,kBAAC,IAAD,CAAO+K,OAAK,EAACC,KAAM,WAAWC,UAAY5K,IAE1C,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAM,UAAUC,UAAYC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,WAAWC,UAAYE,IAG1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAM,YAAYC,UAAY/G,O,yGCtB3CkH,G,KAAAA,OAAQC,G,KAAAA,QAASC,G,KAAAA,OAOnBC,IAJU,KAAKC,QACC,KAAKC,U,8NASnB,OACI,wBAAQC,UAAU,UACd,kBAACN,GAAD,KACA,yBAAKM,UAAU,SAO+B,OAAlChN,aAAaC,QAAQ,UAAsD,MAAjCD,aAAaC,QAAQ,SAC/D,wBACAgN,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,MACtBvK,MAAO,CAAEwK,WAAY,SAGjB,uBAAMlR,KAAN,CAAWC,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,KAAI,yBAAKxH,IAAK4Q,KAAMzK,MAAO,CAACtG,MAAO,YAC/D,uBAAMJ,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,IAAIyL,eAAgBlJ,KAAKnD,MAAMwG,QAAvE,WAAuF,kBAACuL,GAAA,EAAD,OACvF,uBAAMpR,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,aAAT,WAA6B,kBAACyD,GAAA,EAAD,QACzE,uBAAMxL,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,kBAAT,gBAAuC,kBAACsJ,GAAA,EAAD,QACnF,uBAAMrR,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,aAAT,YAA8B,kBAACuJ,GAAA,EAAD,QAC1E,uBAAMtR,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,aAAT,YAA8B,kBAACwJ,GAAA,EAAD,MAA9B,OAGhD,wBACAR,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,IACtBvK,MAAO,CAAEwK,WAAY,SAGjB,uBAAMlR,KAAN,CAAWC,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,KAAI,yBAAKxH,IAAK4Q,KAAMzK,MAAO,CAACtG,MAAO,YAC/D,uBAAMJ,KAAN,CAAW0G,MAAO,CAACiJ,MAAO,SAAU1P,IAAI,KAAI,kBAAC,IAAD,CAAM8H,GAAG,UAAT,YA8B5D,kBAAC0I,GAAD,CAAS/J,MAAO,CAAE8K,QAAS,SAC3B,yBAAKV,UAAU,uBACVtO,KAAKnD,MAAMoS,WAIhB,kBAACf,GAAD,CAAQhK,MAAO,CAAEgL,UAAW,WAA5B,0B,GA5EWjP,IAAMC,YA4FlBsF,eAAQ,MANI,SAAAhC,GACvB,MAAO,CACHH,OAAQ,kBAAMG,EAASmC,SAIhBH,CAAkC2I,ICzFlCgB,GAXK,kBAChB,6BACI,kBAAC,IAAD,CAAOxB,OAAK,EAACC,KAAM,IAAIC,UAAYhH,IACnC,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAM,UAAUC,UAAYC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,WAAWC,UAAYE,IAE1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAM,gBAAgBC,UAAYhH,IAC/C,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAM,SAASC,UAAYhH,MCc/BuI,G,YAzBb,WAAYvS,GAAQ,IAAD,8BACjB,4CAAMA,KACD4C,MAAQ,CAAE4P,UAAU,GAFR,E,+EAUDjQ,EAAO+F,GAEvBjG,QAAQC,IAAIC,EAAO+F,K,+BAInB,OAAInF,KAAKP,MAAM4P,SAEN,qDAGFrP,KAAKnD,MAAMoS,Y,gDAhBY7P,GAE9B,MAAO,CAAEiQ,UAAU,O,GARGpP,IAAMC,WCU5BoP,G,4LAGFC,SAAS7R,MAAM,eACfsC,KAAKnD,MAAM2S,oB,+BAIX,OACE,yBAAKlB,UAAU,IAGiC,OAAlChN,aAAaC,QAAQ,SACrB,kBAAC,IAAD,KACA,kBAAC,GAAiBvB,KAAKnD,MACrB,kBAAC,GAAD,KACC,kBAAC,GAAD,SAKH,kBAAC,IAAD,KACA,kBAAC,GAAiBmD,KAAKnD,MACpB,kBAAC,GAAD,a,GAvBLqD,aAgDHsF,gBAbS,SAAA/F,GACtB,MAAO,CACLgQ,gBAAmD,OAAlCnO,aAAaC,QAAQ,aAIf,SAAAiC,GACzB,MAAO,CACLgM,gBAAiB,kBAAMhM,GfoDhB,SAAAA,GACH,IAAML,EAAQ7B,aAAaC,QAAQ,SAEnC,QAAamO,IAAVvM,EACCK,EAASH,SAER,CACD,IAAMK,EAAiB,IAAI+B,KAAKnE,aAAaC,QAAQ,mBAGlDmC,GAAkB,IAAI+B,KACrBjC,EAASH,MAITG,EAASN,EAAYC,IAErBK,EAASC,GAAkBC,EAAegC,WAAY,IAAID,MAAOC,WAAW,eehE7EF,CAA6C8J,ICjDxCK,QACW,cAA7BC,OAAOzI,SAAS0I,UAEe,UAA7BD,OAAOzI,SAAS0I,UAEhBD,OAAOzI,SAAS0I,SAAS/M,MACvB,2D,uBClBOgN,GAAe,SAACC,EAAWC,GACpC,OAAO,eACAD,EADP,GAEOC,ICALC,GAAe,CACjB9M,MAAO,KACP/D,MAAO,KACPqF,SAAS,GAGPyL,GAAY,SAACzQ,EAAOsI,GACtB,OAAO+H,GAAarQ,EAAO,CACvBL,MAAO,KACPqF,SAAS,KAIXvB,GAAc,SAACzD,EAAOsI,GACxB,OAAO+H,GAAarQ,EAAO,CACvB0D,MAAM4E,EAAO5E,MACb/D,MAAO,KACPqF,SAAS,KAIXrB,GAAW,SAAC3D,EAAOsI,GACrB,OAAO+H,GAAcrQ,EAAO,CACxBL,MAAO2I,EAAO3I,MACdqF,SAAS,KAIX0L,GAAa,SAAC1Q,EAAOsI,GACvB,OAAO+H,GAAarQ,EAAO,CACvB0D,MAAO,QAgBAiN,GAXC,WAAmC,IAAlC3Q,EAAiC,uDAAzBwQ,GAAclI,EAAW,uCAC9C,OAAOA,EAAOtF,MACV,IjBxCkB,aiBwCW,OAAOyN,GAAUzQ,GAC9C,IjBxCoB,eiBwCW,OAAOyD,GAAYzD,EAAOsI,GACzD,IjBxCiB,YiBwCW,OAAO3E,GAAS3D,EAAOsI,GACnD,IjBxCmB,ciBwCW,OAAOoI,GAAW1Q,GAChD,QACI,OAAOA,IC9Bb4Q,GAAqC,qBAAXT,QAA0BA,OAAOU,sCAAyCC,KAEpGC,GAAQC,aAAYL,GAASC,GAC/BK,aAAgBC,QAGdC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,OAIRK,IAASC,OAAOF,GAAKrB,SAASwB,eAAe,SHwGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtR,MAAK,SAAAuR,GACJA,EAAaC,gBAEdxP,OAAM,SAAAxC,GACLF,QAAQE,MAAMA,EAAMiD,c","file":"static/js/main.40be51de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eb89aec1.svg\";","global.SERVER = '127.0.0.1:8000/'\r\n\r\nglobal.REST_AUTH = 'rest-auth/';\r\nglobal.API = 'api/v1/'\r\n\r\n// No starting slash required\r\nglobal.REST_AUTH_REGISTER = global.SERVER + global.API + global.REST_AUTH + 'registration/';\r\nglobal.AUTHENTICATE = global.SERVER + 'authenticate/';\r\nglobal.LOGIN = global.SERVER + global.API + global.REST_AUTH + 'rest-auth/login/';\r\n\r\nglobal.JOBPOST = global.SERVER + 'jobpost/';\r\nglobal.UPLOAD_JOBPOST_IMAGE = global.SERVER + 'upload-jobpost-image/';","import React from 'react';\r\nimport { List } from 'antd';\r\n\r\n\r\n\r\nconst Jobposts = (props) => {\r\n    return (\r\n        <List\r\n        itemLayout=\"vertical\"\r\n        size=\"large\"\r\n        pagination={{\r\n        onChange: page => {\r\n            // console.log(page);\r\n        },\r\n        pageSize: 3,\r\n        }}\r\n        dataSource={props.data}\r\n        renderItem={item => (\r\n        <List.Item\r\n            key={item.title}\r\n            \r\n            extra={\r\n            <img\r\n                width=\"100px\"\r\n                alt={item.img}\r\n                src={item.img}\r\n            />\r\n            }\r\n        >\r\n        <List.Item.Meta\r\n          title={<a href={\"/jobpost/\" + item.id} >{item.title}</a>}\r\n          description={\"Posted by \" + item.job_poster_id + \" on \" + item.post_date}\r\n        />\r\n        {item.description}\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default Jobposts;","// First we need to import axios.js\r\nimport axios from 'axios';\r\n// Next we make an 'instance' of it\r\nconst instance = axios.create({\r\n// .. where we make our configurations\r\n    baseURL: process.env.REACT_APP_AXIOS_BASEURL\r\n});\r\n\r\n// Where you would set stuff like your 'Authorization' header, etc ...\r\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANCE';\r\n\r\n// Also add/ configure interceptors && all the other cool stuff\r\n\r\n\r\ninstance.interceptors.request.use(request => {\r\n    console.log(request);\r\n    // Edit request config\r\n    return request;\r\n}, error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\ninstance.interceptors.response.use(response => {\r\n    console.log(response);\r\n    // Edit response config\r\n    return response;\r\n}, error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport Jobposts from '../components/Jobpost';\r\n\r\n\r\nimport axios from '../axiosConfig';\r\n\r\n\r\nclass JobpostList extends React.Component{\r\n\r\n    state = {\r\n        jobposts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('jobpost/')\r\n            .then(res => {\r\n                this.setState({\r\n                    jobposts: res.data\r\n                });\r\n                //console.log(res.data);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                 <Jobposts data={this.state.jobposts} />\r\n                <br />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default JobpostList;","import React from 'react';\r\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport axios from '../axiosConfig';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\n\r\nconst type = () => {\r\n  return {\"type\" : \"jd\"}\r\n}\r\n\r\nconst jobdescriptionImageProps = {\r\n  name: 'file',\r\n  multiple: false,\r\n  method: 'post',\r\n  data: type,\r\n  action: 'http://127.0.0.1:8000/file-handler/',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      // console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        err: null\r\n      }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      // console.log(this.props);\r\n    }\r\n\r\n    handleFormSubmit = (event, requestType, jobpostID) => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const img_salt = event.target.elements.file;\r\n        // const expiry_date = event.target.elements.expiry_date.value;\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        // console.log(event.target.elements)\r\n        // console.log(img_salt)\r\n\r\n        switch(requestType){\r\n            case 'post':\r\n               return axios.post('http://127.0.0.1:8000/jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => {\r\n                  console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.props.history.push('/jobpost/' + res.data.id + '/');\r\n                  }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n\r\n            case 'put':\r\n                return axios.put('http://127.0.0.1:8000/jobpost/' + jobpostID + '/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => console.log(res))\r\n                .catch(error => console.error(error))\r\n                // .finally(f => window.location.reload());\r\n                \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event,\r\n                this.props.requestType,\r\n                this.props.jobpostID\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              <Form.Item\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an image url'},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n                {/* <Form.Item name='image' label=\"Image\" >\r\n                    <Form.Item name=\"jdimage\">\r\n                      <Upload.Dragger {...jobdescriptionImageProps}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click or drag image to this area to upload</p>\r\n                        <p className=\"ant-upload-hint\">Support for .png files only. 150x150 preferred.</p>\r\n                      </Upload.Dragger>\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n              \r\n              <Form.Item label=\"Expires On\" \r\n              rules={[\r\n                  {required:true,}\r\n              ]}>\r\n                <DatePicker name=\"expiry_date\" />\r\n              </Form.Item> */}\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {this.props.btnText}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default CustomForm;","import React from 'react';\r\n\r\nimport axios from '../axiosConfig';\r\nimport CustomForm from '../components/Form';\r\n\r\nimport { Button, Card } from 'antd';\r\n\r\nclass JobpostDetail extends React.Component{\r\n\r\n    state = {\r\n        jobpost: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const jobpostID = this.props.match.params.jobpostID;\r\n        axios.get('jobpost/' + jobpostID + '/')\r\n            .then(res => {\r\n                this.setState({\r\n                    jobpost: res.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                err.response.status == '404' ? \r\n                    this.props.history.push('/')\r\n                :\r\n                    console.log('loading')\r\n            })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        const jobpostID = this.props.match.params.jobpostID;\r\n        axios.delete('jobpost/' + jobpostID + '/');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n           <div>\r\n                <Card title={this.state.jobpost.title}>\r\n                    <p>{this.state.jobpost.description}</p>\r\n                </Card>\r\n                {\r\n                this.props.match.params.jobpostID !== null ? \r\n                \r\n                <div>\r\n                    <CustomForm {...this.state}\r\n                    requestType=\"put\" \r\n                    jobpostID={this.props.match.params.jobpostID} \r\n                    btnText=\"Update\" />\r\n                    <form onSubmitCapture={this.handleDelete}>\r\n                        <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\r\n                    </form>\r\n                </div>\r\n\r\n                :\r\n\r\n                    <span>No data fdound</span>\r\n                }\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobpostDetail;","import React from 'react';\r\nimport CustomForm from '../components/Form';\r\n\r\n\r\n\r\nclass JobpostCreate extends React.Component{\r\n\r\n    state = {\r\n        jobposts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <h2>New Jobpost</h2>\r\n            <CustomForm \r\n                requestType=\"post\" \r\n                jobpostID={null} \r\n                btnText=\"Create\"\r\n                {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobpostCreate;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axiosConfig';\r\nimport '../../global';\r\n\r\nexport const authStart =() => {\r\n    return{\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    // console.log(\"Logging out before\");\r\n    localStorage.removeItem('userProfileID');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    // console.log(\"Logging out after\");\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const dispatchLogout = () => {\r\n    return dispatch => {\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationDate => {\r\n    return dispatch => {\r\n        setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000)\r\n    }\r\n}\r\n\r\nexport const setUserID = (username, password) => {\r\n        axios.post(\"authenticate/\", {\r\n                username: username,\r\n                password: password\r\n            }).then(res => localStorage.setItem('userProfileID', res.data.id))\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/login/',{\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then (res => {\r\n            // console.log(res);\r\n            // console.log(\"Logging in\");\r\n\r\n            setUserID(username, password);\r\n\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/registration/',{\r\n            username: username,\r\n            password1: password1,\r\n            password2: password2,\r\n            email: email\r\n        })\r\n        .then (res => {\r\n            setUserID(username, password1);\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === undefined) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            \r\n            // console.log(expirationDate);\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n                // console.log(\"Here, logging out\");\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token));\r\n                // console.log(\"Here, not logging out\");\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n           \r\n                // console.log(expirationDate);\r\n                // console.log(localStorage.getItem('token'));\r\n                // console.log((expirationDate.getTime() - new Date().getTime())/1000); \r\n            }\r\n                \r\n        }\r\n    }\r\n}","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\r\nimport { Form, Input, Button, Checkbox, Spin, Alert } from 'antd';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\nclass NormalLoginForm extends React.Component {\r\n\r\n  render() {\r\n\r\n    const onFinish = values => {\r\n        this.props.onAuth(values.username, values.password);\r\n    };\r\n    \r\n    const onFinishFailed = errorInfo => {\r\n    };\r\n\r\n    const onSubCap = event => {\r\n        event.preventDefault();\r\n        // this.props.onAuth(event.username, event.password);\r\n    };\r\n\r\n    let errorMessage = null;\r\n\r\n    if(this.props.error){\r\n        errorMessage = (\r\n            // <p>{this.props.error.message}</p>\r\n            <Alert {...tailLayout} message = 'Username password combination not found.' type='error' showIcon />\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n  \r\n                this.props.loading ?\r\n  \r\n                <Spin indicator={antIcon} />\r\n                \r\n                :\r\n  \r\n  \r\n              <Form\r\n              {...layout}\r\n              initialValues={{\r\n                  remember: true,\r\n              }}\r\n              ref={this.formRef}\r\n              onSubmitCapture={onSubCap}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              >\r\n              <Form.Item\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your username!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input />\r\n              </Form.Item>\r\n  \r\n              <Form.Item\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your password!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input.Password />\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                  <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout}>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                  Login\r\n                  </Button> Or\r\n                  <NavLink style={{marginRight: '10px'}} \r\n                  to='/signup/'> Signup\r\n                  </NavLink>\r\n              </Form.Item>\r\n\r\n              \r\n                {errorMessage}\r\n              </Form>\r\n          }\r\n      </div>\r\n    );\r\n  } \r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n} from 'antd';\r\n\r\nimport * as actions from '../store/actions/auth';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n\r\n\r\n        render(){\r\n\r\n            const onFinish = values => {\r\n              this.props.onAuth(\r\n                  values.username,\r\n                  values.email,\r\n                  values.password,\r\n                  values.confirm\r\n              );\r\n              this.props.history.push('/');\r\n              console.log('Received values of form: ', values);\r\n            };\r\n\r\n            return (\r\n                <Form\r\n                  {...formItemLayout}\r\n                  name=\"register\"\r\n                  onFinish={onFinish}\r\n                  scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                              label=\"Username\"\r\n                              name=\"username\"\r\n                              rules={[\r\n                              {\r\n                                  required: true,\r\n                                  message: 'Please input your username!',\r\n                              },\r\n                              ]}\r\n                          >\r\n                              <Input />\r\n                    </Form.Item>    \r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    label=\"E-mail\"\r\n                    rules={[\r\n                      {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                          if (!value || getFieldValue('password') === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n            \r\n                          return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item name=\"agreement\" valuePropName=\"checked\" {...tailFormItemLayout}>\r\n                    <Checkbox>\r\n                      I have read the <a href=\"\">agreement</a>\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item {...tailFormItemLayout}>\r\n                              <Button type=\"primary\" htmlType=\"submit\">\r\n                                Signup\r\n                              </Button> Or\r\n                              <NavLink style={{marginRight: '10px'}} \r\n                              to='/login/'> Login\r\n                              </NavLink>\r\n                          </Form.Item>\r\n                </Form>\r\n              );\r\n        }\r\n \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","import React from 'react';\r\n\r\n\r\n\r\n\r\nclass LandingPage extends React.Component{\r\n\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                yikes\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { useState, useEffect }  from 'react';\r\nimport { Modal, Form, Input, Row, Col, Avatar, Upload, Button, message, Skeleton, Space, Typography  } from 'antd';\r\n\r\nimport axios from '../axiosConfig';\r\nimport { UserOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nfunction UserProfile() {\r\n    const[username, setUsername] = useState('');\r\n    const[email, setEmail] = useState('');\r\n    const[name, setName] = useState('');\r\n    const[location, setLocation] = useState('');\r\n    const[img_salt, setImgSalt] = useState('');\r\n    const[img, setImg] = useState(null);\r\n\r\n    const { Text } = Typography;\r\n\r\n\r\n    const typeOfImage = (proc) => {\r\n        return {\"type\" : \"profile_pic\", \"process\": proc, \"fileName\": img_salt}\r\n    }\r\n    \r\n    const userProfilePictureUploadProps = {\r\n        name: 'file',\r\n        acceptedFiles: '.png',\r\n        multiple: false,\r\n        method: 'post',\r\n        data: typeOfImage(\"upload\"),\r\n        action: 'file-handler/',\r\n        onRemove(file){\r\n\r\n            console.log(file);\r\n            \r\n            axios.post('file-handler/', {\r\n                \"file\": file.name,\r\n                ...typeOfImage('remove')\r\n            });\r\n\r\n        },\r\n        \r\n        onChange(info) {\r\n          const { status } = info.file;\r\n          if (status !== 'uploading') {\r\n            // console.log(info.file, info.fileList);\r\n          }\r\n          if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n          } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n          }\r\n          reloadProfilePicture();\r\n        },\r\n      };\r\n\r\n    const getProfile = () => {\r\n    axios.get('userprofile/' + localStorage.getItem('userProfileID'))\r\n    .then( res => {\r\n        // Load all profile data\r\n\r\n\r\n        reloadUsername(res.data['username']);\r\n        reloadEmail(res.data['email']);\r\n        reloadName(res.data['name']);\r\n        reloadLocation(res.data['location']);\r\n        reloadImgSalt(res.data['img_salt']);\r\n\r\n        setTimeout(() => message.success('Profile loaded successfully.'), 100);\r\n        }\r\n    )\r\n    .catch(err => {\r\n        message.error(`Your profile could not be loaded due to ` + err.message);\r\n    })\r\n    }\r\n\r\n    const reloadUsername = (data) => {\r\n        setUsername(data);\r\n    }\r\n\r\n    const reloadEmail = (data) => {\r\n        setEmail(data);\r\n    }\r\n\r\n    const reloadName = (data) => {\r\n        setName(data);\r\n    }\r\n\r\n    const reloadLocation = (data) => {\r\n        setLocation(data);\r\n    }\r\n\r\n    const reloadImgSalt = (data) => {\r\n        setImgSalt(data);\r\n    }\r\n\r\n    const reloadImg = (data) => {\r\n        setImg(data);\r\n    }\r\n\r\n    const reloadProfilePicture = () => {\r\n        console.log(typeOfImage('fetch'));\r\n        axios.post('file-handler/', {\r\n            ...typeOfImage('fetch')\r\n        })\r\n        .then(\r\n            res => {\r\n\r\n            if(res.status === 404){\r\n                // Set something to show lack of profile picture.\r\n                console.log(res);\r\n            }\r\n\r\n            else if (res.status === 200 && res.data !== 'ErrorResponseMetadata'){\r\n                console.log(res)\r\n                reloadImg(res.data);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n        const [form] = Form.useForm();\r\n        return (\r\n          <Modal\r\n            visible={visible}\r\n            title=\"Update Profile\"\r\n            okText=\"Update\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n              form\r\n                .validateFields()\r\n                .then(values => {\r\n                  form.resetFields();\r\n                  onCreate(values);\r\n                })\r\n                .catch(info => {\r\n                  console.log('Validate Failed:', info);\r\n                });\r\n            }}\r\n          >\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              name=\"form_in_modal\"\r\n              initialValues={{\r\n                modifier: 'public',\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                rules={[\r\n                  {\r\n                    message: 'Please input your full name.',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder={name}/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"emil\"\r\n                label=\"Email\"\r\n                rules={[\r\n                  {\r\n                    message: 'Please input your email.',\r\n                    type: 'email'\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder={email} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"location\"\r\n                label=\"Location\"\r\n                rules={[\r\n                  {\r\n                    message: 'Please input your Location.',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder={location}/>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        );\r\n      };\r\n\r\n\r\n        const [visible, setVisible] = useState(false);\r\n    \r\n      \r\n        const onCreate = values => {\r\n            console.log('Received values of form: ', values);\r\n            \r\n            var newEmail = values.email == null ? email : values.email;\r\n            var newName = values.name == null ? name : values.name;\r\n            var newLocation = values.location == null ? location : values.location;\r\n            \r\n            axios.put('userprofile/update/' + localStorage.getItem('userProfileID'),{\r\n                email: newEmail,\r\n                name: newName,\r\n                location: newLocation\r\n            })\r\n            .then(res => {\r\n                reloadEmail(res.data['email']);\r\n                reloadName(res.data['name']);\r\n                reloadLocation(res.data['location']);\r\n                reloadImgSalt(res.data['img_salt']);\r\n                setTimeout(() => message.success('Profile updated successfully!'), 100);\r\n            })\r\n            .catch(err => {\r\n                message.error(`Your profile could not be updated due to ` + err.message);\r\n            })\r\n\r\n            \r\n            setVisible(false);\r\n        }\r\n\r\n\r\n    useEffect(() => {\r\n        getProfile();\r\n    }, []); \r\n\r\n\r\n\r\n    return (\r\n            <div>  \r\n                {reloadProfilePicture()}\r\n                \r\n                <Row gutter={[8, 48]}>\r\n                    <Col xs={{ span: 6, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        { \r\n                            img == null?\r\n                                <Avatar shape=\"square\" size=\"large\" icon={ <UserOutlined />}/>\r\n                            :\r\n                            <img src={`data:image/png;base64,${img}`} />                        \r\n                        }   \r\n                    </Col>\r\n                    <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <h1>Your Profile</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Upload {...userProfilePictureUploadProps}>\r\n                            <Button\r\n                                size=\"small\">\r\n                                Change Picture\r\n                            </Button>\r\n                        </Upload>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Username: </p>\r\n                            <p>{username == null ? <Text type=\"danger\">No username found!</Text> : username}</p>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Name: </p>\r\n                            <p>{name == null ? <Text type=\"danger\">No name found!</Text> : name}</p>\r\n                        </Space>                \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Email: </p>\r\n                            <p>{email == null ? <Skeleton active /> : email}</p>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Location: </p>\r\n                            <p>{location == null ? <Text type=\"danger\">No location set!</Text> : location}</p>\r\n                        </Space>                \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Button type=\"primary\" onClickCapture={() => setVisible(true)}>Edit</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                    <CollectionCreateForm\r\n                        visible={visible}\r\n                        onCreate={onCreate}\r\n                        onCancel={() => {\r\n                        setVisible(false);\r\n                        }}\r\n                    />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport CustomForm from '../components/Form';\r\nimport { Form, Input, Button, DatePicker, Upload, message,  Spin, Alert } from 'antd';\r\n\r\n\r\nimport axios from '../axiosConfig';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\nclass Comparison extends React.Component{\r\n\r\n    state = {\r\n        jobid: null,\r\n        projectid: null,\r\n        jobtitle: null\r\n    }\r\n\r\n    loading = false;\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const title = event.target.elements.jdtitle.value;\r\n        const description = event.target.elements.jddescription.value;\r\n        const projtitle = event.target.elements.projtitle.value;\r\n        const projlink = event.target.elements.projlink.value;\r\n\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        // console.log(title, description, projlink, projtitle, job_poster_id);\r\n\r\n        this.loading = true;\r\n\r\n\r\n              axios.post('jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => {\r\n                  // console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.setState({jobid: res.data.id});\r\n\r\n                    axios.post('project/', {\r\n                        title: projtitle,\r\n                        url: projlink,\r\n                        project_owner_id: job_poster_id\r\n                    })\r\n                    .then(res => {\r\n                      this.setState({jobtitle: title});\r\n                      // console.log(res);\r\n                      if(res.status == '201'){\r\n                        this.setState({projectid: res.data.id});\r\n    \r\n                              axios.post('scan-results/', {\r\n                                userid: job_poster_id,\r\n                                jobid: this.state.jobid,\r\n                                projectid: this.state.projectid,\r\n                                jobtitle: this.state.jobtitle\r\n                            })\r\n                            .then(res => {\r\n                              // console.log(res);\r\n                              if(res.status == '200'){\r\n                                // this.props.history.push('/my-scans/' + res.data.id + '/');\r\n                                // this.setState({projectid: res.data.id});\r\n                                this.props.history.push('scan/' + res.data['scanid'])\r\n                                // console.log(res);\r\n                                // axios.post\r\n                            }\r\n                            })\r\n                            .catch(error => this.setState({err: error}));\r\n\r\n                    }\r\n                    })\r\n                    .catch(error => this.setState({err: error}));\r\n                }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <Spin tip=\"Loading...\" spinning={this.loading}>\r\n\r\n            <h2>New Scan</h2>\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              \r\n              <Form.Item\r\n                label=\"Project Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projtitle\" placeholder={\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Project Link\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projlink\" placeholder={\r\n                    \"Paste exact link to project\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n\r\n              <Form.Item\r\n                label=\"Job Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"jdtitle\" placeholder={\r\n                    \"Enter the position/job title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please paste job decription'},\r\n              ]}>\r\n                <Input.TextArea name=\"jddescription\" placeholder={\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={this.loading}>\r\n                  Scan Now\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison;","import React from 'react';\r\nimport { Button} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass LoginHome extends React.Component{\r\n\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 style={{color: \"red\"}}>Hello Style!</h1>\r\n                <p>Add a little style!</p>  \r\n                <Button type=\"primary\"><Link to=\"/new-scan/\">Scan Now</Link></Button>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginHome;","import React from 'react';\r\nimport { List } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Card,Progress } from 'antd';\r\nimport {Link } from 'react-router-dom';\r\n\r\n// {id, projectid, userid, jobid, matchpercent}\r\n\r\nconst { Meta } = Card;\r\n\r\nconst parseDate = (date) => {\r\n    var parts = date.split('-')\r\n    var d = new Date(parts[0], parts[1], parts[2].split('T')[0]);\r\n    return d.toDateString();\r\n}\r\nconst Scan = (props) => {\r\n    return (\r\n        <List\r\n        grid={{\r\n          gutter: 16,\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 4,\r\n          lg: 4,\r\n          xl: 6,\r\n          xxl: 6,\r\n        }}\r\n        \r\n        pagination={{\r\n            onChange: page => {\r\n                // console.log(page);\r\n            },\r\n            pageSize: 10,\r\n            }}\r\n        dataSource={props.data}\r\n        renderItem={item => (\r\n          <List.Item>\r\n\r\n            <Link to={\"scan/\" + item.pk}>\r\n            <Card \r\n            // title={item.title}\r\n            hoverable\r\n            loading={item ? false : true}\r\n\r\n\r\n        cover={\r\n            <Progress type=\"circle\" percent={item.fields.matchpercent? item.fields.matchpercent*100 : 0} />\r\n          }\r\n\r\n          actions={[\r\n            <EditOutlined key=\"edit\" />,\r\n            <DeleteOutlined key=\"delete\" />,\r\n          ]}\r\n        >\r\n            \r\n            <Meta\r\n                // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                title= {item.fields.title ? item.fields.title : \"No position details\"}\r\n                description={\"Created on \" + parseDate(item.fields.posted_date)}\r\n            />\r\n            </Card>\r\n            </Link>\r\n          </List.Item>\r\n        )}\r\n      />\r\n  )\r\n}\r\n\r\nexport default Scan;","import React from 'react';\r\nimport Scan from '../components/Scan';\r\n\r\n\r\nimport axios from '../axiosConfig';\r\n\r\n\r\nclass ScanList extends React.Component{\r\n\r\n    state = {\r\n        scans: []\r\n    }\r\n\r\n    fetchMyScans = () => {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post('my-scans/', {\r\n                uid: localStorage.getItem('userProfileID')\r\n        })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({scans: res.data})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                 <Scan data={this.state.scans} />\r\n                <br />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ScanList;","import React from 'react';\r\n// import axios from 'axios';\r\nimport { Empty  } from 'antd';\r\nimport { Progress, Row, Col } from 'antd';\r\nimport axiosConfig from '../axiosConfig';\r\n\r\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\r\n\r\nclass ScanDetail extends React.Component{\r\n\r\n    cat = null;\r\n\r\n    subcat = null;\r\n\r\n    label = null;\r\n\r\n    state = {\r\n        match: {},\r\n        structure: null,\r\n        processed: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const matchID = this.props.match.params.matchID;\r\n        axiosConfig.get('scans/' + matchID + '/')\r\n            .then(res => {\r\n                if(res.status == 200){\r\n                    this.setState({\r\n                        match: res.data\r\n                    });\r\n                    \r\n                    axiosConfig.get('/metrics-structure/')\r\n                    .then(res => {\r\n                        if(res.status == 200){\r\n                            this.setState({structure: res.data});\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // err.response.status == '404' ? \r\n                //     this.props.history.push('/')\r\n                // :\r\n                //     console.log('loading')\r\n            })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        const matchID = this.props.match.params.matchID;\r\n        axiosConfig.delete('scans/' + matchID + '/');\r\n    }\r\n\r\n    existsInProject = (row) => {\r\n        if(this.state.match['matchitems']){\r\n            for(var i=0;i<this.state.match['matchitems'].length;i++){\r\n                if(this.state.match['matchitems'][i].trim() == row.trim()){\r\n                    return <CheckCircleTwoTone style={{ fontSize: '1.2rem', float: \"right\" }} twoToneColor=\"#52c41a\" />\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return <CloseCircleTwoTone style={{ fontSize: '1rem', float: \"right\" }} twoToneColor=\"#FF0000\" />\r\n    }\r\n\r\n\r\n    componentDidUpdate = () => {\r\n        // console.log(this.state.match['matchitems'][0][0])\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.structure && this.state.match['jobpost_result']){\r\n            this.cat = this.state.structure[0][this.state.match['jobpost_results'][0].split(',')[0]]\r\n            this.subcat = this.state.match['jobpost_results'][0].split(',')[1];\r\n            this.label = this.state.match['jobpost_results'][0].split(',')[0];\r\n        } \r\n            \r\n\r\n\r\n        return (\r\n\r\n            <Row>\r\n                <Col span={3}></Col>\r\n            <Col span={9}><Progress type=\"circle\" percent={this.state.match.matchpercent? this.state.match.matchpercent*100 : 0} /></Col>\r\n\r\n\r\n                \r\n                {\r\n                this.props.match.params.matchID !== null ? \r\n                \r\n                <Col span={5}>\r\n                        { this.state.structure && this.state.match['jobpost_results'] ?\r\n                        <div style={{ listStyleType: \"none\" }}>\r\n                            <h1>{this.state.structure[0][this.label]}</h1>\r\n                            <h3>{this.state.structure[1][this.subcat]}</h3>\r\n\r\n\r\n                                {\r\n                                this.state.match['jobpost_results'].map((item, key) => {\r\n                                    var parts = item.split(',');\r\n                                    \r\n                                    if(this.subcat === parts[1]){\r\n                                        if(this.label != parts [0]){\r\n                                            this.label = parts[0];\r\n                                            return(\r\n                                                <React.Fragment key={key}>\r\n                                                    <p>{this.state.structure[3][parts[0]]}{this.existsInProject(this.label)}</p>\r\n                                                </React.Fragment>\r\n                                                )\r\n                                        }\r\n                                        else{\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n                                    else{\r\n                                        this.subcat = parts[1];\r\n                                        this.label = parts[0];\r\n                                    return(\r\n                                        <React.Fragment key={key}>\r\n                                            <h1>{\r\n                                                this.cat === this.state.structure[0][this.label] ?\r\n                                                ''\r\n                                                :\r\n                                                this.cat = this.state.structure[0][this.label]\r\n                                                }</h1>\r\n                                            <h3>{this.state.structure[1][parts[1]]}</h3>\r\n                                            <p>{this.state.structure[3][parts[0]]}\r\n                                    {this.existsInProject(this.label)}</p>\r\n                                        </React.Fragment>\r\n                                    )                                    \r\n\r\n                                }\r\n                                }) \r\n                                \r\n                                }\r\n                        </div>\r\n                                :\r\n                        <Empty  />\r\n                        }\r\n                        </Col>\r\n\r\n                :\r\n                    \r\n                    <span>No data found</span>\r\n                }\r\n                </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScanDetail;","import React from 'react'\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nimport JobpostList from './containers/JobpostListView';\r\nimport JobpostDetail from './containers/JobpostDetailView';\r\nimport JobpostCreate from './containers/JobpostCreate';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport LandingPage from './containers/LadingPage';\r\nimport UserProfile from './containers/Profile';\r\nimport Comparison from './containers/Comparison';\r\nimport LoginHome from './containers/LoginHome';\r\nimport ScanList from './containers/ScanList';\r\nimport ScanDetail from './containers/ScanDetail';\r\n\r\nconst BaseRouter = () => (\r\n    <div>\r\n        <Route exact path ='/' component ={LoginHome} />\r\n        <Route exact path ='/new-scan/' component ={Comparison} />\r\n        <Route exact path ='/my-scans/' component ={ScanList} />\r\n        <Route exact path ='/scan/:matchID' component ={ScanDetail} />\r\n\r\n        <Route exact path ='/jobs' component ={JobpostList} />\r\n        <Route exact path ='/jobpost/:jobpostID' component ={JobpostDetail} />\r\n        <Route exact path ='/create/' component ={JobpostCreate} />\r\n\r\n        <Route exact path ='/login/' component ={Login} />\r\n        <Route exact path ='/signup/' component ={Signup} />\r\n{/* \r\n        <Route exact path ='/home/' component ={LandingPage} /> */}\r\n        <Route exact path ='/profile/' component ={UserProfile} />\r\n    </div>\r\n);\r\n\r\nexport default BaseRouter;","import React from'react';\r\nimport * as actions from '../store/actions/auth';\r\nimport {connect} from 'react-redux';\r\nimport { Menu, Layout } from 'antd';\r\nimport { PlusCircleOutlined, FolderOpenOutlined, LogoutOutlined, QuestionCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport logo from '../assets/logo.svg';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\n\r\nclass CustomLayout extends React.Component {\r\n\r\n    componentDidMount() {\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                <div className=\"logo\" />\r\n    \r\n    \r\n                    \r\n\r\n\r\n                        {\r\n                            localStorage.getItem('token') !== null && localStorage.getItem('error') == null?\r\n                            <Menu\r\n                            theme=\"dark\"\r\n                            mode=\"horizontal\"\r\n                            defaultSelectedKeys={['10']}\r\n                            style={{ lineHeight: '64px' }}\r\n                            >\r\n\r\n                                <Menu.Item key=\"6\"><Link to=\"/\"><img src={logo} style={{width: '9rem'}}></img></Link></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"5\" onClickCapture={this.props.logout}> Logout <LogoutOutlined /></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"4\"><Link to=\"/profile/\">Profile <UserOutlined /></Link></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"3\"><Link to=\"/how-it-works/\">How it works <QuestionCircleOutlined /></Link></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"2\"><Link to=\"/my-scans\">My Scans <FolderOpenOutlined /></Link></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"1\"><Link to=\"/new-scan\">New Scan <PlusCircleOutlined /> </Link></Menu.Item>\r\n                                </Menu>\r\n                            :\r\n                            <Menu\r\n                            theme=\"dark\"\r\n                            mode=\"horizontal\"\r\n                            defaultSelectedKeys={['']}\r\n                            style={{ lineHeight: '64px' }}\r\n                            >\r\n\r\n                                <Menu.Item key=\"6\"><Link to=\"/\"><img src={logo} style={{width: '9rem'}}></img></Link></Menu.Item>\r\n                                <Menu.Item style={{float: 'right'}} key=\"2\"><Link to=\"/login\">Login</Link></Menu.Item>\r\n                                </Menu>\r\n\r\n                        }\r\n                        {\r\n                            // localStorage.getItem('token') !== null && localStorage.getItem('error') == null?\r\n                            //     <Menu.Item key=\"2\"><Link to=\"/jobs\">Jobs</Link></Menu.Item>\r\n                            \r\n                            // :\r\n                            // ''\r\n                        }\r\n                            \r\n                        {\r\n                            // localStorage.getItem('token') !== null && localStorage.getItem('error') == null?\r\n                            // <SubMenu style={{float: 'right'}} title={<span><Link to=\"/profile/\"> Profile</Link></span>}>\r\n                            //     <MenuItemGroup title=\"General\">\r\n                            //         <Menu.Item key=\"setting:2\"><span><PlusOutlined /> <Link to=\"/create/\"> New Jobpost</Link></span></Menu.Item>\r\n                            //         <Menu.Item key=\"setting:3\" onClickCapture={this.props.logout}><LogoutOutlined /> Logout</Menu.Item>\r\n                            //     </MenuItemGroup>\r\n                            // </SubMenu>\r\n                          \r\n                            //     :\r\n    \r\n                            //     <Menu.Item style={{float: 'right'}} key=\"2\"><Link to=\"/login\">Login</Link></Menu.Item>\r\n                        }\r\n                        \r\n\r\n    \r\n    \r\n                </Header>\r\n                <Content style={{ padding: '50px' }}>\r\n                <div className=\"site-layout-content\">\r\n                    {this.props.children}\r\n                </div>\r\n    \r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>CreativeHire 2020</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CustomLayout);\r\n\r\n","import React from 'react'\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nimport LandingPage from './containers/LadingPage';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\n\r\nconst GuestRouter = () => (\r\n    <div>\r\n        <Route exact path ='/' component ={LandingPage} />\r\n        <Route exact path ='/login/' component ={Login} />\r\n        <Route exact path ='/signup/' component ={Signup} />\r\n        \r\n        <Route exact path ='/scan/:scanID' component ={LandingPage} />\r\n        <Route exact path ='/scan/' component ={LandingPage} />\r\n    </div>\r\n);\r\n\r\nexport default GuestRouter;","import React from 'react';\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      console.log(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","import React, {Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport BaseRouter from './routes';\r\nimport * as actions from './store/actions/auth'\r\n\r\nimport './App.css';\r\n\r\nimport CustomLayout from './containers/Layout';\r\nimport GuestRouter from './guestRoute';\r\nimport ErrorBoundary from './components/ErrorBoundary'\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title=\"CreativeHire\";\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n\r\n{\r\n                    localStorage.getItem('token') !== null ?\r\n                    <Router>\r\n                    <CustomLayout {...this.props}>\r\n                      <ErrorBoundary>\r\n                       <BaseRouter />\r\n                      </ErrorBoundary>\r\n                     </CustomLayout>\r\n                   </Router>\r\n                    :\r\n                    <Router>\r\n                    <CustomLayout {...this.props}>\r\n                       <GuestRouter />\r\n                     </CustomLayout>\r\n                   </Router>\r\n                }\r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: localStorage.getItem('token') !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token:action.token,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject (state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null\r\n    });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from 'axios';\r\n\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nimport reducer from './store/reducers/auth';\r\n\r\n\r\nconst composeEnhancer = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancer(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}
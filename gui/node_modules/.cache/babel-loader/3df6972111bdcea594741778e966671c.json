{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\components\\\\Form.js\";\nimport React from 'react';\nimport { Form, Input, Button, DatePicker } from 'antd';\nimport axios from 'axios';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    number: 'Not a validate number!'\n  }\n};\n\nclass CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n    };\n\n    this.handleFormSubmit = (event, requestType, jobpostID) => {\n      const title = event.target.elements.title.value;\n      const description = event.target.elements.description.value;\n      const img = event.target.elements.img.value;\n      const expiry_date = event.target.elements.expiry_date.value;\n\n      switch (requestType) {\n        case 'post':\n          return axios.post('http://127.0.0.1:8000/jobpost/', {\n            title: title,\n            description: description,\n            img: img\n          }).then(res => console.log(res)).catch(error => console.error(error));\n\n        case 'put':\n          return axios.put('http://127.0.0.1:8000/jobpost/' + jobpostID + '/', {\n            title: title,\n            description: description,\n            img: img\n          }).then(res => console.log(res)).catch(error => console.error(error)).finally(f => window.location.reload());\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Form, Object.assign({\n      onSubmitCapture: event => this.handleFormSubmit(event, this.props.requestType, this.props.jobpostID)\n    }, layout, {\n      name: \"nest-messages\",\n      validateMessages: validateMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"title\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.title : \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'Please enter an image url'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      name: \"description\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.description : \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Image\",\n      rules: [{\n        required: true,\n        message: 'Please input image url!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"img\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.img : \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Expires On\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      name: \"expiry_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.props.btnText)));\n  }\n\n}\n\nexport default CustomForm;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/components/Form.js"],"names":["React","Form","Input","Button","DatePicker","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","CustomForm","Component","componentDidMount","console","log","props","handleFormSubmit","event","requestType","jobpostID","title","target","elements","value","description","img","expiry_date","post","then","res","catch","error","put","finally","f","window","location","reload","render","jobpost","message","offset","btnText"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, DatePicker } from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n      console.log(this.props);\r\n    }\r\n\r\n    handleFormSubmit = (event, requestType, jobpostID) => {\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const img = event.target.elements.img.value;\r\n        const expiry_date = event.target.elements.expiry_date.value;\r\n\r\n        switch(requestType){\r\n            case 'post':\r\n               return axios.post('http://127.0.0.1:8000/jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    img:img\r\n                })\r\n                .then(res => console.log(res))\r\n                .catch(error => console.error(error));\r\n\r\n            case 'put':\r\n                return axios.put('http://127.0.0.1:8000/jobpost/' + jobpostID + '/', {\r\n                    title: title,\r\n                    description: description,\r\n                    img:img\r\n                })\r\n                .then(res => console.log(res))\r\n                .catch(error => console.error(error))\r\n                .finally(f => window.location.reload());\r\n                \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event,\r\n                this.props.requestType,\r\n                this.props.jobpostID\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              <Form.Item\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an image url'},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n              \r\n              <Form.Item\r\n                label=\"Image\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image url!',\r\n                  },\r\n                ]}\r\n              >\r\n                  <Input name=\"img\"  placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.img\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Expires On\" \r\n              rules={[\r\n                  {required:true,}\r\n              ]}>\r\n                <DatePicker name=\"expiry_date\" />\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {this.props.btnText}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default CustomForm;"]},"metadata":{},"sourceType":"module"}
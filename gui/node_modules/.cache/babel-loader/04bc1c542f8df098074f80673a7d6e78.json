{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/checkbox/style\";import _Checkbox from\"antd/es/checkbox\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import\"antd/es/spin/style\";import _Spin from\"antd/es/spin\";import\"antd/es/alert/style\";import _Alert from\"antd/es/alert\";import _classCallCheck from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{NavLink}from'react-router-dom';import{connect}from'react-redux';import*as actions from'../store/actions/auth';import{LoadingOutlined}from'@ant-design/icons';var antIcon=React.createElement(LoadingOutlined,{style:{fontSize:24},spin:true});var layout={labelCol:{span:8},wrapperCol:{span:8}};var tailLayout={wrapperCol:{offset:8,span:8}};var NormalLoginForm=/*#__PURE__*/function(_React$Component){_inherits(NormalLoginForm,_React$Component);function NormalLoginForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,NormalLoginForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(NormalLoginForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.errorParts=[];return _this;}_createClass(NormalLoginForm,[{key:\"componentDidMount\",value:function componentDidMount(){if(localStorage.getItem('token')){this.props.history.push('/');}}},{key:\"render\",value:function render(){var _this2=this;var onFinish=function onFinish(values){_this2.props.onAuth(values.username,values.password);};var onFinishFailed=function onFinishFailed(errorInfo){};var onSubCap=function onSubCap(event){event.preventDefault();// this.props.onAuth(event.username, event.password);\n};var errorMessage=null;var getErrorValues=function getErrorValues(){if(_this2.props.error){Object.entries(_this2.props.error).map(function(key,value){for(var i=0;i<=value;i++){_this2.errorParts.push(key[1][i]);}});}};if(this.props.error){console.log(this.props.error);getErrorValues();this.errorParts.forEach(function(element){if(element){errorMessage=React.createElement(_Alert,Object.assign({},tailLayout,{message:\"Login failed!\",description:element,type:\"error\",showIcon:true}));}});}return React.createElement(\"div\",null,this.props.loading?React.createElement(_Spin,{indicator:antIcon}):React.createElement(_Form,Object.assign({},layout,{initialValues:{remember:true},ref:this.formRef,onSubmitCapture:onSubCap,onFinish:onFinish,onFinishFailed:onFinishFailed}),React.createElement(_Form.Item,{label:\"Username\",name:\"username\",rules:[{required:true,message:'Please input your username!'}]},React.createElement(_Input,null)),React.createElement(_Form.Item,{label:\"Password\",name:\"password\",rules:[{required:true,message:'Please input your password!'}]},React.createElement(_Input.Password,null)),React.createElement(_Form.Item,Object.assign({},tailLayout,{name:\"remember\",valuePropName:\"checked\"}),React.createElement(_Checkbox,null,\"Remember me\")),React.createElement(_Form.Item,tailLayout,React.createElement(_Button,{type:\"primary\",htmlType:\"submit\"},\"Login\"),\" Or\",React.createElement(NavLink,{style:{marginRight:'10px'},to:\"/signup/\"},\" Signup\")),errorMessage));}}]);return NormalLoginForm;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.loading,error:state.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(username,password){return dispatch(actions.authLogin(username,password));}};};export default connect(mapStateToProps,mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Login.js"],"names":["React","NavLink","connect","actions","LoadingOutlined","antIcon","fontSize","layout","labelCol","span","wrapperCol","tailLayout","offset","NormalLoginForm","errorParts","localStorage","getItem","props","history","push","onFinish","values","onAuth","username","password","onFinishFailed","errorInfo","onSubCap","event","preventDefault","errorMessage","getErrorValues","error","Object","entries","map","key","value","i","console","log","forEach","element","loading","remember","formRef","required","message","marginRight","Component","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox, Spin, Alert } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\nclass NormalLoginForm extends React.Component {\r\n    errorParts = [];\r\n\r\n    componentDidMount(){\r\n\r\n        if(localStorage.getItem('token')){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n  render() {\r\n\r\n    const onFinish = values => {\r\n        this.props.onAuth(values.username, values.password);\r\n    };\r\n    \r\n    const onFinishFailed = errorInfo => {\r\n    };\r\n\r\n    const onSubCap = event => {\r\n        event.preventDefault();\r\n        // this.props.onAuth(event.username, event.password);\r\n    };\r\n\r\n\r\n    let errorMessage = null;\r\n\r\n    const getErrorValues = () => {\r\n      if(this.props.error){\r\n        Object.entries(this.props.error).map((key, value) => {\r\n          for(var i=0;i<=value;i++){\r\n            this.errorParts.push(key[1][i]);\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    if(this.props.error){\r\n        console.log(this.props.error)\r\n        getErrorValues();\r\n        this.errorParts.forEach(element => {\r\n          if(element){\r\n            errorMessage = (\r\n              <Alert {...tailLayout} message = \"Login failed!\" description = {element} type='error' showIcon />\r\n            )     \r\n          }\r\n      });\r\n      }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n  \r\n                this.props.loading ?\r\n  \r\n                <Spin indicator={antIcon} />\r\n                \r\n                :\r\n  \r\n  \r\n              <Form\r\n              {...layout}\r\n              initialValues={{\r\n                  remember: true,\r\n              }}\r\n              ref={this.formRef}\r\n              onSubmitCapture={onSubCap}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              >\r\n              <Form.Item\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your username!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input />\r\n              </Form.Item>\r\n  \r\n              <Form.Item\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your password!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input.Password />\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                  <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout}>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                  Login\r\n                  </Button> Or\r\n                  <NavLink style={{marginRight: '10px'}} \r\n                  to='/signup/'> Signup\r\n                  </NavLink>\r\n              </Form.Item>\r\n\r\n              \r\n                {errorMessage}\r\n              </Form>\r\n          }\r\n      </div>\r\n    );\r\n  } \r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Form,Input,Button,DatePicker,Upload,message}from'antd';import{InboxOutlined}from'@ant-design/icons';import axios from'axios';var layout={labelCol:{span:6},wrapperCol:{span:14}};var validateMessages={required:'This field is required!',types:{number:'Not a validate number!'}};var type=function type(){return{\"type\":\"jd\"};};var jobdescriptionImageProps={name:'file',multiple:false,method:'post',data:type,action:'http://127.0.0.1:8000/upload-image/',onChange:function onChange(info){var status=info.file.status;if(status!=='uploading'){// console.log(info.file, info.fileList);\n}if(status==='done'){message.success(\"\".concat(info.file.name,\" file uploaded successfully.\"));}else if(status==='error'){message.error(\"\".concat(info.file.name,\" file upload failed.\"));}}};var CustomForm=/*#__PURE__*/function(_React$Component){_inherits(CustomForm,_React$Component);function CustomForm(props){var _this;_classCallCheck(this,CustomForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(CustomForm).call(this,props));_this.componentDidMount=function(){// console.log(this.props);\n};_this.handleFormSubmit=function(event,requestType,jobpostID){event.preventDefault();var title=event.target.elements.title.value;var description=event.target.elements.description.value;var img_salt=event.target.elements.file;var expiry_date=event.target.elements.expiry_date.value;var job_poster_id=localStorage.getItem('userProfileID');// console.log(event.target.elements)\n// console.log(img_salt)\nswitch(requestType){case'post'://  return axios.post('http://127.0.0.1:8000/jobpost/', {\n//       title: title,\n//       description: description,\n//       job_poster_id: job_poster_id,\n//       // img:img\n//   })\n//   .then(res => {\n//     console.log(res);\n//     if(res.status == '201'){\n//       this.props.history.push('/jobpost/' + res.data.id + '/');\n//     }\n//   })\n//   .catch(error => this.setState({err: error}));\ncase'put':return axios.put('http://127.0.0.1:8000/jobpost/'+jobpostID+'/',{title:title,description:description,job_poster_id:job_poster_id// img:img\n}).then(function(res){return console.log(res);}).catch(function(error){return console.error(error);});// .finally(f => window.location.reload());\n}};_this.state={err:null};return _this;}_createClass(CustomForm,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(Form,Object.assign({onSubmitCapture:function onSubmitCapture(event){return _this2.handleFormSubmit(event,_this2.props.requestType,_this2.props.jobpostID);}},layout,{name:\"nest-messages\",validateMessages:validateMessages}),React.createElement(Form.Item,{label:\"Title\",rules:[{required:true}]},React.createElement(Input,{name:\"title\",placeholder:this.props.requestType=='put'?this.props.jobpost.title:\"Enter a title\"})),React.createElement(Form.Item,{label:\"Description\",rules:[{required:true,message:'Please enter an image url'}]},React.createElement(Input.TextArea,{name:\"description\",placeholder:this.props.requestType=='put'?this.props.jobpost.description:\"Enter a Description\"})),React.createElement(Form.Item,{name:\"image\",label:\"Image\"},React.createElement(Form.Item,{name:\"jdimage\"},React.createElement(Upload.Dragger,jobdescriptionImageProps,React.createElement(\"p\",{className:\"ant-upload-drag-icon\"},React.createElement(InboxOutlined,null)),React.createElement(\"p\",{className:\"ant-upload-text\"},\"Click or drag image to this area to upload\"),React.createElement(\"p\",{className:\"ant-upload-hint\"},\"Support for .png files only. 150x150 preferred.\")))),React.createElement(Form.Item,{label:\"Expires On\",rules:[{required:true}]},React.createElement(DatePicker,{name:\"expiry_date\"})),React.createElement(Form.Item,{hidden:this.state.err==null?true:false}),React.createElement(Form.Item,{wrapperCol:_objectSpread({},layout.wrapperCol,{offset:8})},React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},this.props.btnText)));}}]);return CustomForm;}(React.Component);export default CustomForm;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/components/Form.js"],"names":["React","Form","Input","Button","DatePicker","Upload","message","InboxOutlined","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","type","jobdescriptionImageProps","name","multiple","method","data","action","onChange","info","status","file","success","error","CustomForm","props","componentDidMount","handleFormSubmit","event","requestType","jobpostID","preventDefault","title","target","elements","value","description","img_salt","expiry_date","job_poster_id","localStorage","getItem","put","then","res","console","log","catch","state","err","jobpost","offset","btnText","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\n\r\nconst type = () => {\r\n  return {\"type\" : \"jd\"}\r\n}\r\n\r\nconst jobdescriptionImageProps = {\r\n  name: 'file',\r\n  multiple: false,\r\n  method: 'post',\r\n  data: type,\r\n  action: 'http://127.0.0.1:8000/upload-image/',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      // console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        err: null\r\n      }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      // console.log(this.props);\r\n    }\r\n\r\n    handleFormSubmit = (event, requestType, jobpostID) => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const img_salt = event.target.elements.file;\r\n        const expiry_date = event.target.elements.expiry_date.value;\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        // console.log(event.target.elements)\r\n        // console.log(img_salt)\r\n\r\n        switch(requestType){\r\n            case 'post':\r\n              //  return axios.post('http://127.0.0.1:8000/jobpost/', {\r\n              //       title: title,\r\n              //       description: description,\r\n              //       job_poster_id: job_poster_id,\r\n              //       // img:img\r\n              //   })\r\n              //   .then(res => {\r\n              //     console.log(res);\r\n              //     if(res.status == '201'){\r\n              //       this.props.history.push('/jobpost/' + res.data.id + '/');\r\n              //     }\r\n              //   })\r\n              //   .catch(error => this.setState({err: error}));\r\n\r\n            case 'put':\r\n                return axios.put('http://127.0.0.1:8000/jobpost/' + jobpostID + '/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => console.log(res))\r\n                .catch(error => console.error(error))\r\n                // .finally(f => window.location.reload());\r\n                \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event,\r\n                this.props.requestType,\r\n                this.props.jobpostID\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              <Form.Item\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an image url'},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n                <Form.Item name='image' label=\"Image\" >\r\n                    <Form.Item name=\"jdimage\">\r\n                      <Upload.Dragger {...jobdescriptionImageProps}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click or drag image to this area to upload</p>\r\n                        <p className=\"ant-upload-hint\">Support for .png files only. 150x150 preferred.</p>\r\n                      </Upload.Dragger>\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n              \r\n              <Form.Item label=\"Expires On\" \r\n              rules={[\r\n                  {required:true,}\r\n              ]}>\r\n                <DatePicker name=\"expiry_date\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {this.props.btnText}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default CustomForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Form,Input,Button,DatePicker}from'antd';import axios from'axios';var layout={labelCol:{span:6},wrapperCol:{span:14}};var validateMessages={required:'This field is required!',types:{number:'Not a validate number!'}};var CustomForm=/*#__PURE__*/function(_React$Component){_inherits(CustomForm,_React$Component);function CustomForm(props){var _this;_classCallCheck(this,CustomForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(CustomForm).call(this,props));_this.componentDidMount=function(){// console.log(this.props);\n};_this.handleFormSubmit=function(event,requestType,jobpostID){event.preventDefault();var title=event.target.elements.title.value;var description=event.target.elements.description.value;var img=event.target.elements.img.value;var expiry_date=event.target.elements.expiry_date.value;var job_poster_id=localStorage.getItem('userProfileID');switch(requestType){case'post':return axios.post('http://127.0.0.1:8000/jobpost/',{title:title,description:description,job_poster_id:job_poster_id,img:img}).then(function(res){console.log(res);if(res.status=='201'){_this.props.history.push('/jobpost/'+res.data.id+'/');}}).catch(function(error){return _this.setState({err:error});});case'put':return axios.put('http://127.0.0.1:8000/jobpost/'+jobpostID+'/',{title:title,description:description,job_poster_id:job_poster_id,img:img}).then(function(res){return console.log(res);}).catch(function(error){return console.error(error);}).finally(function(f){return window.location.reload();});}};_this.state={err:null};return _this;}_createClass(CustomForm,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(Form,Object.assign({onSubmitCapture:function onSubmitCapture(event){return _this2.handleFormSubmit(event,_this2.props.requestType,_this2.props.jobpostID);}},layout,{name:\"nest-messages\",validateMessages:validateMessages}),React.createElement(Form.Item,{label:\"Title\",rules:[{required:true}]},React.createElement(Input,{name:\"title\",placeholder:this.props.requestType=='put'?this.props.jobpost.title:\"Enter a title\"})),React.createElement(Form.Item,{label:\"Description\",rules:[{required:true,message:'Please enter an image url'}]},React.createElement(Input.TextArea,{name:\"description\",placeholder:this.props.requestType=='put'?this.props.jobpost.description:\"Enter a Description\"})),React.createElement(Form.Item,{label:\"Image\",rules:[{required:true,message:'Please input image url!'}]},React.createElement(Input,{name:\"img\",placeholder:this.props.requestType=='put'?this.props.jobpost.img:\"Enter image url\"})),React.createElement(Form.Item,{label:\"Expires On\",rules:[{required:true}]},React.createElement(DatePicker,{name:\"expiry_date\"})),React.createElement(Form.Item,{hidden:this.state.err==null?true:false}),React.createElement(Form.Item,{wrapperCol:_objectSpread({},layout.wrapperCol,{offset:8})},React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},this.props.btnText)));}}]);return CustomForm;}(React.Component);export default CustomForm;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/components/Form.js"],"names":["React","Form","Input","Button","DatePicker","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","CustomForm","props","componentDidMount","handleFormSubmit","event","requestType","jobpostID","preventDefault","title","target","elements","value","description","img","expiry_date","job_poster_id","localStorage","getItem","post","then","res","console","log","status","history","push","data","id","catch","error","setState","err","put","finally","f","window","location","reload","state","jobpost","message","offset","btnText","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, DatePicker } from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        err: null\r\n      }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      // console.log(this.props);\r\n    }\r\n\r\n    handleFormSubmit = (event, requestType, jobpostID) => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const img = event.target.elements.img.value;\r\n        const expiry_date = event.target.elements.expiry_date.value;\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        switch(requestType){\r\n            case 'post':\r\n               return axios.post('http://127.0.0.1:8000/jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    img:img\r\n                })\r\n                .then(res => {\r\n                  console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.props.history.push('/jobpost/' + res.data.id + '/');\r\n                  }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n\r\n            case 'put':\r\n                return axios.put('http://127.0.0.1:8000/jobpost/' + jobpostID + '/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    img:img\r\n                })\r\n                .then(res => console.log(res))\r\n                .catch(error => console.error(error))\r\n                .finally(f => window.location.reload());\r\n                \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event,\r\n                this.props.requestType,\r\n                this.props.jobpostID\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              <Form.Item\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an image url'},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n              \r\n              <Form.Item\r\n                label=\"Image\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image url!',\r\n                  },\r\n                ]}\r\n              >\r\n                  <Input name=\"img\"  placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.img\r\n                  :\r\n                    \"Enter image url\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Expires On\" \r\n              rules={[\r\n                  {required:true,}\r\n              ]}>\r\n                <DatePicker name=\"expiry_date\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {this.props.btnText}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default CustomForm;"]},"metadata":{},"sourceType":"module"}
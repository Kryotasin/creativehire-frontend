{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Comparison.js\";\nimport React from 'react';\nimport CustomForm from '../components/Form';\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\nimport axios from 'axios';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    number: 'Not a validate number!'\n  }\n};\n\nclass Comparison extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const title = event.target.elements.title.value;\n      const description = event.target.elements.description.value;\n      const img_salt = event.target.elements.file; // const expiry_date = event.target.elements.expiry_date.value;\n\n      const job_poster_id = localStorage.getItem('userProfileID');\n      axios.post('http://127.0.0.1:8000/jobpost/', {\n        title: title,\n        description: description,\n        job_poster_id: job_poster_id // img:img\n\n      }).then(res => {\n        console.log(res);\n\n        if (res.status == '201') {\n          this.props.history.push('/my-scans/' + res.data.id + '/');\n        }\n      }).catch(error => this.setState({\n        err: error\n      }));\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"New Scan\"), React.createElement(Form, Object.assign({\n      onSubmitCapture: event => this.handleFormSubmit(event)\n    }, layout, {\n      name: \"nest-messages\",\n      validateMessages: validateMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Project Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"projtitle\",\n      placeholder: \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Project Link\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"projtitle\",\n      placeholder: \"Paste exact link to project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Job Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"title\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.title : \"Enter the position/job title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'Please enter an '\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      name: \"description\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.description : \"Enter a Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      hidden: this.state.err == null ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Scan Now\"))));\n  }\n\n}\n\nexport default Comparison;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Comparison.js"],"names":["React","CustomForm","Form","Input","Button","DatePicker","Upload","message","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","Comparison","Component","state","handleFormSubmit","event","preventDefault","title","target","elements","value","description","img_salt","file","job_poster_id","localStorage","getItem","post","then","res","console","log","status","props","history","push","data","id","catch","error","setState","err","componentDidMount","render","requestType","jobpost","offset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkDC,OAAlD,QAAiE,MAAjE;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AASA,MAAME,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,yBADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAFgB,CAAzB;;AAOA,MAAMC,UAAN,SAAyBjB,KAAK,CAACkB,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B,EAF4B;;AAAA,SAQpCC,gBARoC,GAQhBC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,KAAtB,CAA4BG,KAA1C;AACA,YAAMC,WAAW,GAAGN,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBE,WAAtB,CAAkCD,KAAtD;AACA,YAAME,QAAQ,GAAGP,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBI,IAAvC,CAJ0B,CAK1B;;AACA,YAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB;AAGMxB,MAAAA,KAAK,CAACyB,IAAN,CAAW,gCAAX,EAA6C;AACvCV,QAAAA,KAAK,EAAEA,KADgC;AAEvCI,QAAAA,WAAW,EAAEA,WAF0B;AAGvCG,QAAAA,aAAa,EAAEA,aAHwB,CAIvC;;AAJuC,OAA7C,EAMGI,IANH,CAMQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAGA,GAAG,CAACG,MAAJ,IAAc,KAAjB,EAAuB;AACrB,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,eAAeN,GAAG,CAACO,IAAJ,CAASC,EAAxB,GAA6B,GAArD;AACD;AACF,OAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,GAAG,EAAEF;AAAN,OAAd,CAZlB;AAaT,KA9BmC;AAAA;;AAKpCG,EAAAA,iBAAiB,GAAG,CACnB;;AA0BDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGA,oBAAC,IAAD;AAAM,MAAA,eAAe,EAAG5B,KAAD,IAAW,KAAKD,gBAAL,CAC9BC,KAD8B;AAAlC,OAEWZ,MAFX;AAEmB,MAAA,IAAI,EAAC,eAFxB;AAEwC,MAAA,gBAAgB,EAAEI,gBAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,WAAW,EAC/B,eADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAJF,EAiBE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEA,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,WAAW,EAC/B,6BADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAjBF,EA+BE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEA,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAC7B,KAAKyB,KAAL,CAAWW,WAAX,IAA0B,KAA1B,GACE,KAAKX,KAAL,CAAWY,OAAX,CAAmB5B,KADrB,GAGE,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CA/BF,EA+CE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,aAAjB;AACA,MAAA,KAAK,EAAE,CACH;AACET,QAAAA,QAAQ,EAAE,IADZ;AAEEP,QAAAA,OAAO,EAAC;AAFV,OADG,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,IAAI,EAAC,aAArB;AAAmC,MAAA,WAAW,EAC5C,KAAKgC,KAAL,CAAWW,WAAX,IAA0B,KAA1B,GACE,KAAKX,KAAL,CAAWY,OAAX,CAAmBxB,WADrB,GAGE,qBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA/CF,EA6DE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAW4B,GAAX,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,KAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,EAkEE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE,EAAE,GAAGtC,MAAM,CAACG,UAAZ;AAAwBwC,QAAAA,MAAM,EAAE;AAAhC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAlEF,CAHA,CADJ;AA+EH;;AAhHmC;;AAmHxC,eAAenC,UAAf","sourcesContent":["import React from 'react';\r\nimport CustomForm from '../components/Form';\r\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\nclass Comparison extends React.Component{\r\n\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const img_salt = event.target.elements.file;\r\n        // const expiry_date = event.target.elements.expiry_date.value;\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n\r\n              axios.post('http://127.0.0.1:8000/jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => {\r\n                  console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.props.history.push('/my-scans/' + res.data.id + '/');\r\n                  }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <h2>New Scan</h2>\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              \r\n              <Form.Item\r\n                label=\"Project Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projtitle\" placeholder={\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Project Link\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projtitle\" placeholder={\r\n                    \"Paste exact link to project\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n\r\n              <Form.Item\r\n                label=\"Job Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter the position/job title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an '},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Scan Now\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Comparison.js\";\nimport React from 'react';\nimport CustomForm from '../components/Form';\nimport { Form, Input, Button, DatePicker, Upload, message, Spin, Alert } from 'antd';\nimport axios from 'axios';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    number: 'Not a validate number!'\n  }\n};\n\nclass Comparison extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobid: null,\n      projectid: null,\n      loading: false,\n      jobtitle: null\n    };\n\n    this.changeLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const title = event.target.elements.jdtitle.value;\n      const description = event.target.elements.jddescription.value;\n      const projtitle = event.target.elements.projtitle.value;\n      const projlink = event.target.elements.projlink.value;\n      const job_poster_id = localStorage.getItem('userProfileID'); // console.log(title, description, projlink, projtitle, job_poster_id);\n\n      axios.post('http://127.0.0.1:8000/jobpost/', {\n        title: title,\n        description: description,\n        job_poster_id: job_poster_id // img:img\n\n      }).then(res => {\n        // console.log(res);\n        if (res.status == '201') {\n          this.setState({\n            jobid: res.data.id\n          });\n          axios.post('http://127.0.0.1:8000/project/', {\n            title: projtitle,\n            url: projlink,\n            project_owner_id: job_poster_id\n          }).then(res => {\n            this.setState({\n              jobtitle: title\n            }); // console.log(res);\n\n            if (res.status == '201') {\n              this.setState({\n                projectid: res.data.id\n              });\n              axios.post('http://127.0.0.1:8000/scan-results/', {\n                userid: job_poster_id,\n                jobid: this.state.jobid,\n                projectid: this.state.projectid,\n                jobtitle: this.state.jobtitle\n              }).then(res => {\n                // console.log(res);\n                if (res.status == '200') {\n                  // this.props.history.push('/my-scans/' + res.data.id + '/');\n                  // this.setState({projectid: res.data.id});\n                  this.props.history.push('scan/' + res.data['scanid']); // console.log(res);\n                  // axios.post\n                }\n              }).catch(error => this.setState({\n                err: error\n              }));\n            }\n          }).catch(error => this.setState({\n            err: error\n          }));\n        }\n      }).catch(error => this.setState({\n        err: error\n      }));\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Spin, {\n      tip: \"Loading...\",\n      spinning: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"New Scan\"), React.createElement(Form, Object.assign({\n      onSubmitCapture: event => this.handleFormSubmit(event)\n    }, layout, {\n      name: \"nest-messages\",\n      validateMessages: validateMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Project Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"projtitle\",\n      placeholder: \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Project Link\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"projlink\",\n      placeholder: \"Paste exact link to project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Job Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"jdtitle\",\n      placeholder: \"Enter the position/job title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'Please paste job decription'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      name: \"jddescription\",\n      placeholder: \"Enter a Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      hidden: this.state.err == null ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      onClick: this.changeLoading(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Scan Now\")))));\n  }\n\n}\n\nexport default Comparison;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Comparison.js"],"names":["React","CustomForm","Form","Input","Button","DatePicker","Upload","message","Spin","Alert","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","Comparison","Component","state","jobid","projectid","loading","jobtitle","changeLoading","setState","handleFormSubmit","event","preventDefault","title","target","elements","jdtitle","value","description","jddescription","projtitle","projlink","job_poster_id","localStorage","getItem","post","then","res","status","data","id","url","project_owner_id","userid","props","history","push","catch","error","err","componentDidMount","render","offset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkDC,OAAlD,EAA4DC,IAA5D,EAAkEC,KAAlE,QAA+E,MAA/E;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AASA,MAAME,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,yBADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAFgB,CAAzB;;AAOA,MAAMC,UAAN,SAAyBnB,KAAK,CAACoB,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,QAAQ,EAAE;AAJN,KAF4B;;AAAA,SAYpCC,aAZoC,GAYpB,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAdmC;;AAAA,SAgBpCI,gBAhBoC,GAgBhBC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,KAA5C;AACA,YAAMC,WAAW,GAAGP,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBI,aAAtB,CAAoCF,KAAxD;AACA,YAAMG,SAAS,GAAGT,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBK,SAAtB,CAAgCH,KAAlD;AACA,YAAMI,QAAQ,GAAGV,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBM,QAAtB,CAA+BJ,KAAhD;AAEA,YAAMK,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB,CAR0B,CAU1B;;AAEMhC,MAAAA,KAAK,CAACiC,IAAN,CAAW,gCAAX,EAA6C;AACvCZ,QAAAA,KAAK,EAAEA,KADgC;AAEvCK,QAAAA,WAAW,EAAEA,WAF0B;AAGvCI,QAAAA,aAAa,EAAEA,aAHwB,CAIvC;;AAJuC,OAA7C,EAMGI,IANH,CAMQC,GAAG,IAAI;AACX;AACA,YAAGA,GAAG,CAACC,MAAJ,IAAc,KAAjB,EAAuB;AACrB,eAAKnB,QAAL,CAAc;AAACL,YAAAA,KAAK,EAAEuB,GAAG,CAACE,IAAJ,CAASC;AAAjB,WAAd;AAEAtC,UAAAA,KAAK,CAACiC,IAAN,CAAW,gCAAX,EAA6C;AACzCZ,YAAAA,KAAK,EAAEO,SADkC;AAEzCW,YAAAA,GAAG,EAAEV,QAFoC;AAGzCW,YAAAA,gBAAgB,EAAEV;AAHuB,WAA7C,EAKCI,IALD,CAKMC,GAAG,IAAI;AACX,iBAAKlB,QAAL,CAAc;AAACF,cAAAA,QAAQ,EAAEM;AAAX,aAAd,EADW,CAEX;;AACA,gBAAGc,GAAG,CAACC,MAAJ,IAAc,KAAjB,EAAuB;AACrB,mBAAKnB,QAAL,CAAc;AAACJ,gBAAAA,SAAS,EAAEsB,GAAG,CAACE,IAAJ,CAASC;AAArB,eAAd;AAEMtC,cAAAA,KAAK,CAACiC,IAAN,CAAW,qCAAX,EAAkD;AAChDQ,gBAAAA,MAAM,EAAEX,aADwC;AAEhDlB,gBAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAF8B;AAGhDC,gBAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAH0B;AAIhDE,gBAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AAJ2B,eAAlD,EAMDmB,IANC,CAMIC,GAAG,IAAI;AACX;AACA,oBAAGA,GAAG,CAACC,MAAJ,IAAc,KAAjB,EAAuB;AACrB;AACA;AACA,uBAAKM,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAUT,GAAG,CAACE,IAAJ,CAAS,QAAT,CAAlC,EAHqB,CAIrB;AACA;AACH;AACA,eAfC,EAgBDQ,KAhBC,CAgBKC,KAAK,IAAI,KAAK7B,QAAL,CAAc;AAAC8B,gBAAAA,GAAG,EAAED;AAAN,eAAd,CAhBd;AAkBT;AACA,WA9BD,EA+BCD,KA/BD,CA+BOC,KAAK,IAAI,KAAK7B,QAAL,CAAc;AAAC8B,YAAAA,GAAG,EAAED;AAAN,WAAd,CA/BhB;AAgCH;AACA,OA5CH,EA6CGD,KA7CH,CA6CSC,KAAK,IAAI,KAAK7B,QAAL,CAAc;AAAC8B,QAAAA,GAAG,EAAED;AAAN,OAAd,CA7ClB;AA8CE,WAAK7B,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACX,KA3EmC;AAAA;;AASpCkC,EAAAA,iBAAiB,GAAG,CACnB;;AAmEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWG,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGA,oBAAC,IAAD;AAAM,MAAA,eAAe,EAAGK,KAAD,IAAW,KAAKD,gBAAL,CAC9BC,KAD8B;AAAlC,OAEWlB,MAFX;AAEmB,MAAA,IAAI,EAAC,eAFxB;AAEwC,MAAA,gBAAgB,EAAEI,gBAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,WAAW,EAC/B,eADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAJF,EAiBE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEA,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAC9B,6BADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAjBF,EA+BE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEA,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,WAAW,EAC7B,8BADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CA/BF,EA4CE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,aAAjB;AACA,MAAA,KAAK,EAAE,CACH;AACEA,QAAAA,QAAQ,EAAE,IADZ;AAEET,QAAAA,OAAO,EAAC;AAFV,OADG,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,IAAI,EAAC,eAArB;AAAqC,MAAA,WAAW,EAC5C,qBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA5CF,EAuDE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,EAAE,KAAKc,KAAL,CAAWoC,GAAX,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,KAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,EA4DE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE,EAAE,GAAG9C,MAAM,CAACG,UAAZ;AAAwB8C,QAAAA,MAAM,EAAE;AAAhC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAE,KAAKlC,aAAL,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CA5DF,CAHA,CAFA,CADJ;AA4EH;;AA1JmC;;AA6JxC,eAAeP,UAAf","sourcesContent":["import React from 'react';\r\nimport CustomForm from '../components/Form';\r\nimport { Form, Input, Button, DatePicker, Upload, message,  Spin, Alert } from 'antd';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\nclass Comparison extends React.Component{\r\n\r\n    state = {\r\n        jobid: null,\r\n        projectid: null,\r\n        loading: false,\r\n        jobtitle: null\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    changeLoading = () => {\r\n      this.setState({loading: true});\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const title = event.target.elements.jdtitle.value;\r\n        const description = event.target.elements.jddescription.value;\r\n        const projtitle = event.target.elements.projtitle.value;\r\n        const projlink = event.target.elements.projlink.value;\r\n\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        // console.log(title, description, projlink, projtitle, job_poster_id);\r\n\r\n              axios.post('http://127.0.0.1:8000/jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => {\r\n                  // console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.setState({jobid: res.data.id});\r\n\r\n                    axios.post('http://127.0.0.1:8000/project/', {\r\n                        title: projtitle,\r\n                        url: projlink,\r\n                        project_owner_id: job_poster_id\r\n                    })\r\n                    .then(res => {\r\n                      this.setState({jobtitle: title});\r\n                      // console.log(res);\r\n                      if(res.status == '201'){\r\n                        this.setState({projectid: res.data.id});\r\n    \r\n                              axios.post('http://127.0.0.1:8000/scan-results/', {\r\n                                userid: job_poster_id,\r\n                                jobid: this.state.jobid,\r\n                                projectid: this.state.projectid,\r\n                                jobtitle: this.state.jobtitle\r\n                            })\r\n                            .then(res => {\r\n                              // console.log(res);\r\n                              if(res.status == '200'){\r\n                                // this.props.history.push('/my-scans/' + res.data.id + '/');\r\n                                // this.setState({projectid: res.data.id});\r\n                                this.props.history.push('scan/' + res.data['scanid'])\r\n                                // console.log(res);\r\n                                // axios.post\r\n                            }\r\n                            })\r\n                            .catch(error => this.setState({err: error}));\r\n\r\n                    }\r\n                    })\r\n                    .catch(error => this.setState({err: error}));\r\n                }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n                this.setState({loading: false});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\r\n\r\n            <h2>New Scan</h2>\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              \r\n              <Form.Item\r\n                label=\"Project Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projtitle\" placeholder={\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Project Link\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projlink\" placeholder={\r\n                    \"Paste exact link to project\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n\r\n              <Form.Item\r\n                label=\"Job Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"jdtitle\" placeholder={\r\n                    \"Enter the position/job title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please paste job decription'},\r\n              ]}>\r\n                <Input.TextArea name=\"jddescription\" placeholder={\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={this.changeLoading()}>\r\n                  Scan Now\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import\"antd/es/spin/style\";import _Spin from\"antd/es/spin\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import _objectSpread from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _classCallCheck from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import CustomForm from'../components/Form';import axios from'../axiosConfig';var layout={labelCol:{span:6},wrapperCol:{span:14}};var validateMessages={required:'This field is required!',types:{number:'Not a validate number!'}};var Comparison=/*#__PURE__*/function(_React$Component){_inherits(Comparison,_React$Component);function Comparison(){var _getPrototypeOf2;var _this;_classCallCheck(this,Comparison);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Comparison)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={jobid:null,projectid:null,jobtitle:null};_this.loading=false;_this.handleFormSubmit=function(event){event.preventDefault();var title=event.target.elements.jdtitle.value;var description=event.target.elements.jddescription.value;var projtitle=event.target.elements.projtitle.value;var projlink=event.target.elements.projlink.value;var job_poster_id=localStorage.getItem('userProfileID');// console.log(title, description, projlink, projtitle, job_poster_id);\n_this.loading=true;axios.post('jobpost/',{title:title,description:description,job_poster_id:job_poster_id// img:img\n}).then(function(res){// console.log(res);\nif(res.status=='201'){_this.setState({jobid:res.data.id});axios.post('project/',{title:projtitle,url:projlink,project_owner_id:job_poster_id}).then(function(res){_this.setState({jobtitle:title});// console.log(res);\nif(res.status=='201'){_this.setState({projectid:res.data.id});axios.post('scan-results/',{userid:job_poster_id,jobid:_this.state.jobid,projectid:_this.state.projectid,jobtitle:_this.state.jobtitle}).then(function(res){// console.log(res);\nif(res.status=='200'){// this.props.history.push('/my-scans/' + res.data.id + '/');\n// this.setState({projectid: res.data.id});\n_this.props.history.push('scan/'+res.data['scanid']);// console.log(res);\n// axios.post\n}}).catch(function(error){return _this.setState({err:error});});}}).catch(function(error){return _this.setState({err:error});});}}).catch(function(error){return _this.setState({err:error});});};return _this;}_createClass(Comparison,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"br\",null),React.createElement(_Spin,{tip:\"Loading...\",spinning:this.loading},React.createElement(\"h2\",null,\"New Scan\"),React.createElement(_Form,Object.assign({onSubmitCapture:function onSubmitCapture(event){return _this2.handleFormSubmit(event);}},layout,{name:\"nest-messages\",validateMessages:validateMessages}),React.createElement(_Form.Item,{label:\"Project Title\",rules:[{required:true}]},React.createElement(_Input,{name:\"projtitle\",placeholder:\"Enter a title\"})),React.createElement(_Form.Item,{label:\"Project Link\",rules:[{required:true}]},React.createElement(_Input,{name:\"projlink\",placeholder:\"Paste exact link to project\"})),React.createElement(_Form.Item,{label:\"Job Title\",rules:[{required:true}]},React.createElement(_Input,{name:\"jdtitle\",placeholder:\"Enter the position/job title\"})),React.createElement(_Form.Item,{label:\"Description\",rules:[{required:true,message:'Please paste job decription'}]},React.createElement(_Input.TextArea,{name:\"jddescription\",placeholder:\"Enter a Description\"})),React.createElement(_Form.Item,{hidden:this.state.err==null?true:false}),React.createElement(_Form.Item,{wrapperCol:_objectSpread({},layout.wrapperCol,{offset:8})},React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",loading:this.loading},\"Scan Now\")))));}}]);return Comparison;}(React.Component);export default Comparison;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Comparison.js"],"names":["React","CustomForm","axios","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","Comparison","state","jobid","projectid","jobtitle","loading","handleFormSubmit","event","preventDefault","title","target","elements","jdtitle","value","description","jddescription","projtitle","projlink","job_poster_id","localStorage","getItem","post","then","res","status","setState","data","id","url","project_owner_id","userid","props","history","push","catch","error","err","message","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CustomForm from '../components/Form';\r\nimport { Form, Input, Button, DatePicker, Upload, message,  Spin, Alert } from 'antd';\r\n\r\n\r\nimport axios from '../axiosConfig';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: 'This field is required!',\r\n  types: {\r\n    number: 'Not a validate number!',\r\n  },\r\n};\r\n\r\nclass Comparison extends React.Component{\r\n\r\n    state = {\r\n        jobid: null,\r\n        projectid: null,\r\n        jobtitle: null\r\n    }\r\n\r\n    loading = false;\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const title = event.target.elements.jdtitle.value;\r\n        const description = event.target.elements.jddescription.value;\r\n        const projtitle = event.target.elements.projtitle.value;\r\n        const projlink = event.target.elements.projlink.value;\r\n\r\n        const job_poster_id = localStorage.getItem('userProfileID');\r\n        \r\n        // console.log(title, description, projlink, projtitle, job_poster_id);\r\n\r\n        this.loading = true;\r\n\r\n\r\n              axios.post('jobpost/', {\r\n                    title: title,\r\n                    description: description,\r\n                    job_poster_id: job_poster_id,\r\n                    // img:img\r\n                })\r\n                .then(res => {\r\n                  // console.log(res);\r\n                  if(res.status == '201'){\r\n                    this.setState({jobid: res.data.id});\r\n\r\n                    axios.post('project/', {\r\n                        title: projtitle,\r\n                        url: projlink,\r\n                        project_owner_id: job_poster_id\r\n                    })\r\n                    .then(res => {\r\n                      this.setState({jobtitle: title});\r\n                      // console.log(res);\r\n                      if(res.status == '201'){\r\n                        this.setState({projectid: res.data.id});\r\n    \r\n                              axios.post('scan-results/', {\r\n                                userid: job_poster_id,\r\n                                jobid: this.state.jobid,\r\n                                projectid: this.state.projectid,\r\n                                jobtitle: this.state.jobtitle\r\n                            })\r\n                            .then(res => {\r\n                              // console.log(res);\r\n                              if(res.status == '200'){\r\n                                // this.props.history.push('/my-scans/' + res.data.id + '/');\r\n                                // this.setState({projectid: res.data.id});\r\n                                this.props.history.push('scan/' + res.data['scanid'])\r\n                                // console.log(res);\r\n                                // axios.post\r\n                            }\r\n                            })\r\n                            .catch(error => this.setState({err: error}));\r\n\r\n                    }\r\n                    })\r\n                    .catch(error => this.setState({err: error}));\r\n                }\r\n                })\r\n                .catch(error => this.setState({err: error}));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <Spin tip=\"Loading...\" spinning={this.loading}>\r\n\r\n            <h2>New Scan</h2>\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              \r\n              <Form.Item\r\n                label=\"Project Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projtitle\" placeholder={\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Project Link\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"projlink\" placeholder={\r\n                    \"Paste exact link to project\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n\r\n              <Form.Item\r\n                label=\"Job Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"jdtitle\" placeholder={\r\n                    \"Enter the position/job title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please paste job decription'},\r\n              ]}>\r\n                <Input.TextArea name=\"jddescription\" placeholder={\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={this.loading}>\r\n                  Scan Now\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison;"]},"metadata":{},"sourceType":"module"}
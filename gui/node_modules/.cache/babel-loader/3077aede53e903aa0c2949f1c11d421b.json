{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axiosConfig';\nimport '../../global';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('userProfileID');\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const dispatchLogout = () => {\n  return dispatch => {\n    dispatch(logout());\n  };\n};\nexport const checkAuthTimeout = expirationDate => {\n  return dispatch => {\n    setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000);\n  };\n};\nexport const setUserID = (username, password) => {\n  axios.post(\"authenticate/\", {\n    username: username,\n    password: password\n  }).then(res => localStorage.setItem('userProfileID', res.data.id));\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('api/v1/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      setUserID(username, password);\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('api/v1/rest-auth/registration/', {\n      username: username,\n      password1: password1,\n      password2: password2,\n      email: email\n    }).then(res => {\n      setUserID(username, password1);\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err.response.data));\n      localStorage;\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","dispatchLogout","dispatch","checkAuthTimeout","expirationDate","setTimeout","setUserID","username","password","post","then","res","setItem","data","id","authLogin","key","Date","getTime","catch","err","authSignup","email","password1","password2","response","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axiosConfig';\r\nimport '../../global';\r\n\r\nexport const authStart =() => {\r\n    return{\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('userProfileID');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const dispatchLogout = () => {\r\n    return dispatch => {\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationDate => {\r\n    return dispatch => {\r\n        setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000)\r\n    }\r\n}\r\n\r\nexport const setUserID = (username, password) => {\r\n        axios.post(\"authenticate/\", {\r\n                username: username,\r\n                password: password\r\n            }).then(res => localStorage.setItem('userProfileID', res.data.id))\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/login/',{\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then (res => {\r\n            setUserID(username, password);\r\n\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/registration/',{\r\n            username: username,\r\n            password1: password1,\r\n            password2: password2,\r\n            email: email\r\n        })\r\n        .then (res => {\r\n            setUserID(username, password1);\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data));\r\n            localStorage\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === undefined) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            \r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n                \r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
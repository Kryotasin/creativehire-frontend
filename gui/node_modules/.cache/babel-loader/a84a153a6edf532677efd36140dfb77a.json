{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\ScanDetail.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Space, Empty } from 'antd';\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\n\nclass ScanDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.cat = null;\n    this.subcat = null;\n    this.label = null;\n    this.state = {\n      match: {},\n      structure: null,\n      processed: null\n    };\n\n    this.handleDelete = event => {\n      const matchID = this.props.match.params.matchID;\n      axios.delete('http://127.0.0.1:8000/scans/' + matchID + '/');\n    };\n\n    this.existsInProject = row => {\n      if (this.state.match['matchitems']) {\n        for (var i = 0; i < this.state.match['matchitems'].length; i++) {\n          console.log(row);\n          console.log();\n          console.log(this.state.match['matchitems'][i][0].trim() == row.trim());\n        }\n      }\n\n      return React.createElement(CloseCircleTwoTone, {\n        twoToneColor: \"#FF0000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    };\n\n    this.componentDidUpdate = () => {// console.log(this.state.match)\n    };\n  }\n\n  componentDidMount() {\n    const matchID = this.props.match.params.matchID;\n    axios.get('http://127.0.0.1:8000/scans/' + matchID + '/').then(res => {\n      if (res.status == 200) {\n        this.setState({\n          match: res.data\n        });\n        axios.get('http://127.0.0.1:8000/metrics-structure/').then(res => {\n          if (res.status == 200) {\n            this.setState({\n              structure: res.data\n            });\n          }\n        });\n      }\n    }).catch(err => {// err.response.status == '404' ? \n      //     this.props.history.push('/')\n      // :\n      //     console.log('loading')\n    });\n  }\n\n  render() {\n    if (this.state.structure && this.state.match['jobpost_result']) {\n      this.cat = this.state.structure[0][this.state.match['jobpost_results'][0].split(',')[0]];\n      this.subcat = this.state.match['jobpost_results'][0].split(',')[1];\n      this.label = this.state.match['jobpost_results'][0].split(',')[0];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.match.params.matchID !== null ? React.createElement(Space, {\n      size: \"10\",\n      direction: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.structure && this.state.match['jobpost_results'] ? React.createElement(\"ul\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.structure[0][this.label]), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.structure[1][this.subcat]), this.state.match['jobpost_results'].map((item, key) => {\n      var parts = item.split(',');\n\n      if (this.subcat === parts[1]) {\n        if (this.label != parts[0]) {\n          this.label = parts[0];\n          return React.createElement(React.Fragment, {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, this.state.structure[3][parts[0]], this.existsInProject(this.label)));\n        } else {}\n      } else {\n        this.subcat = parts[1];\n        this.label = parts[0];\n        return React.createElement(React.Fragment, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, this.cat === this.state.structure[0][this.label] ? '' : this.cat = this.state.structure[0][this.label]), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, this.state.structure[1][parts[1]]), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.state.structure[3][parts[0]], this.existsInProject(this.label)));\n      }\n    })) : React.createElement(Empty, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"No data found\"));\n  }\n\n}\n\nexport default ScanDetail;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/ScanDetail.js"],"names":["React","axios","Space","Empty","CheckCircleTwoTone","CloseCircleTwoTone","ScanDetail","Component","cat","subcat","label","state","match","structure","processed","handleDelete","event","matchID","props","params","delete","existsInProject","row","i","length","console","log","trim","componentDidUpdate","componentDidMount","get","then","res","status","setState","data","catch","err","render","split","listStyleType","map","item","key","parts"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Space, Empty  } from 'antd';\r\n\r\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\r\n\r\nclass ScanDetail extends React.Component{\r\n\r\n    cat = null;\r\n\r\n    subcat = null;\r\n\r\n    label = null;\r\n\r\n    state = {\r\n        match: {},\r\n        structure: null,\r\n        processed: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const matchID = this.props.match.params.matchID;\r\n        axios.get('http://127.0.0.1:8000/scans/' + matchID + '/')\r\n            .then(res => {\r\n                if(res.status == 200){\r\n                    this.setState({\r\n                        match: res.data\r\n                    });\r\n                    \r\n                    axios.get('http://127.0.0.1:8000/metrics-structure/')\r\n                    .then(res => {\r\n                        if(res.status == 200){\r\n                            this.setState({structure: res.data});\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // err.response.status == '404' ? \r\n                //     this.props.history.push('/')\r\n                // :\r\n                //     console.log('loading')\r\n            })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        const matchID = this.props.match.params.matchID;\r\n        axios.delete('http://127.0.0.1:8000/scans/' + matchID + '/');\r\n    }\r\n\r\n    existsInProject = (row) => {\r\n        if(this.state.match['matchitems']){\r\n            for(var i=0;i<this.state.match['matchitems'].length;i++){\r\n                console.log(row)\r\n                console.log()\r\n                console.log(this.state.match['matchitems'][i][0].trim() == row.trim())\r\n\r\n            }\r\n        }\r\n\r\n\r\n        return <CloseCircleTwoTone twoToneColor=\"#FF0000\" />\r\n    }\r\n\r\n\r\n    componentDidUpdate = () => {\r\n        // console.log(this.state.match)\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.structure && this.state.match['jobpost_result']){\r\n            this.cat = this.state.structure[0][this.state.match['jobpost_results'][0].split(',')[0]]\r\n            this.subcat = this.state.match['jobpost_results'][0].split(',')[1];\r\n            this.label = this.state.match['jobpost_results'][0].split(',')[0];\r\n        } \r\n            \r\n\r\n\r\n        return (\r\n           <div>\r\n                {\r\n                this.props.match.params.matchID !== null ? \r\n                \r\n                    <Space size='10' direction='vertical'>\r\n                        { this.state.structure && this.state.match['jobpost_results'] ?\r\n                        <ul style={{ listStyleType: \"none\" }}>\r\n                            <h1>{this.state.structure[0][this.label]}</h1>\r\n                            <h3>{this.state.structure[1][this.subcat]}</h3>\r\n\r\n\r\n                                {\r\n                                this.state.match['jobpost_results'].map((item, key) => {\r\n                                    var parts = item.split(',');\r\n                                    \r\n                                    if(this.subcat === parts[1]){\r\n                                        if(this.label != parts [0]){\r\n                                            this.label = parts[0];\r\n                                            return(\r\n                                                <React.Fragment key={key}>\r\n                                                    <li>{this.state.structure[3][parts[0]]}{this.existsInProject(this.label)}</li>\r\n                                                </React.Fragment>\r\n                                                )\r\n                                        }\r\n                                        else{\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n                                    else{\r\n                                        this.subcat = parts[1];\r\n                                        this.label = parts[0];\r\n                                    return(\r\n                                        <React.Fragment key={key}>\r\n                                            <h1>{\r\n                                                this.cat === this.state.structure[0][this.label] ?\r\n                                                ''\r\n                                                :\r\n                                                this.cat = this.state.structure[0][this.label]\r\n                                                }</h1>\r\n                                            <h3>{this.state.structure[1][parts[1]]}</h3>\r\n                                            <li>{this.state.structure[3][parts[0]]}\r\n                                    {this.existsInProject(this.label)}</li>\r\n                                        </React.Fragment>\r\n                                    )                                    \r\n\r\n                                }\r\n                                }) \r\n                                \r\n                                }\r\n                        </ul>\r\n                                :\r\n                        <Empty  />\r\n                        }\r\n                    </Space>\r\n\r\n                :\r\n                    \r\n                    <span>No data found</span>\r\n                }\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScanDetail;"]},"metadata":{},"sourceType":"module"}
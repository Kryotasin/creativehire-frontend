{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Comparison.js\";\nimport React from 'react';\nimport CustomForm from '../components/Form';\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\n\nclass Comparison extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"New Scan\"), React.createElement(Form, Object.assign({\n      onSubmitCapture: event => this.handleFormSubmit(event, this.props.requestType, this.props.jobpostID)\n    }, layout, {\n      name: \"nest-messages\",\n      validateMessages: validateMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Title\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"title\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.title : \"Enter a title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Description\",\n      rules: [{\n        required: true,\n        message: 'Please enter an image url'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      name: \"description\",\n      placeholder: this.props.requestType == 'put' ? this.props.jobpost.description : \"Enter a Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      hidden: this.state.err == null ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.btnText))), \"s\");\n  }\n\n}\n\nexport default Comparison;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Comparison.js"],"names":["React","CustomForm","Form","Input","Button","DatePicker","Upload","message","Comparison","Component","state","componentDidMount","render","event","handleFormSubmit","props","requestType","jobpostID","layout","validateMessages","required","jobpost","title","description","err","wrapperCol","offset","btnText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkDC,OAAlD,QAAiE,MAAjE;;AAGA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B,EAF4B;AAAA;;AAKpCC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGA,oBAAC,IAAD;AAAM,MAAA,eAAe,EAAGC,KAAD,IAAW,KAAKC,gBAAL,CAC9BD,KAD8B,EAE9B,KAAKE,KAAL,CAAWC,WAFmB,EAG9B,KAAKD,KAAL,CAAWE,SAHmB;AAAlC,OAIWC,MAJX;AAImB,MAAA,IAAI,EAAC,eAJxB;AAIwC,MAAA,gBAAgB,EAAEC,gBAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE;AADZ,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAC7B,KAAKL,KAAL,CAAWC,WAAX,IAA0B,KAA1B,GACE,KAAKD,KAAL,CAAWM,OAAX,CAAmBC,KADrB,GAGE,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CALF,EAqBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,aAAjB;AACA,MAAA,KAAK,EAAE,CACH;AACEF,QAAAA,QAAQ,EAAE,IADZ;AAEEb,QAAAA,OAAO,EAAC;AAFV,OADG,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,IAAI,EAAC,aAArB;AAAmC,MAAA,WAAW,EAC5C,KAAKQ,KAAL,CAAWC,WAAX,IAA0B,KAA1B,GACE,KAAKD,KAAL,CAAWM,OAAX,CAAmBE,WADrB,GAGE,qBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CArBF,EAsDE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,GAAX,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,KAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,EA2DE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE,EAAE,GAAGN,MAAM,CAACO,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWY,OADd,CADF,CA3DF,CAHA,MADJ;AAwEH;;AAjFmC;;AAoFxC,eAAenB,UAAf","sourcesContent":["import React from 'react';\r\nimport CustomForm from '../components/Form';\r\nimport { Form, Input, Button, DatePicker, Upload, message } from 'antd';\r\n\r\n\r\nclass Comparison extends React.Component{\r\n\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <h2>New Scan</h2>\r\n            <Form onSubmitCapture={(event) => this.handleFormSubmit(\r\n                event,\r\n                this.props.requestType,\r\n                this.props.jobpostID\r\n                )} {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\r\n              <Form.Item\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input name=\"title\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.title\r\n                  :\r\n                    \"Enter a title\"\r\n                  }/>\r\n              </Form.Item>\r\n        \r\n              <Form.Item label=\"Description\"\r\n              rules={[\r\n                  {\r\n                    required: true,\r\n                    message:'Please enter an image url'},\r\n              ]}>\r\n                <Input.TextArea name=\"description\" placeholder={\r\n                  this.props.requestType == 'put' ?\r\n                    this.props.jobpost.description\r\n                  :\r\n                    \"Enter a Description\"\r\n                  }/>\r\n              </Form.Item>\r\n\r\n                {/* <Form.Item name='image' label=\"Image\" >\r\n                    <Form.Item name=\"jdimage\">\r\n                      <Upload.Dragger {...jobdescriptionImageProps}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click or drag image to this area to upload</p>\r\n                        <p className=\"ant-upload-hint\">Support for .png files only. 150x150 preferred.</p>\r\n                      </Upload.Dragger>\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n              \r\n              <Form.Item label=\"Expires On\" \r\n              rules={[\r\n                  {required:true,}\r\n              ]}>\r\n                <DatePicker name=\"expiry_date\" />\r\n              </Form.Item> */}\r\n\r\n              <Form.Item\r\n                hidden={this.state.err == null ? true : false}\r\n              >\r\n              </Form.Item>\r\n             \r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {this.props.btnText}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>s\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import\"antd/es/list/style\";import _List from\"antd/es/list\";import\"antd/es/progress/style\";import _Progress from\"antd/es/progress\";import\"antd/es/card/style\";import _Card from\"antd/es/card\";import React from'react';import{EditOutlined,DeleteOutlined}from'@ant-design/icons';import{Link}from'react-router-dom';// {id, projectid, userid, jobid, matchpercent}\nvar Meta=_Card.Meta;var parseDate=function parseDate(date){var parts=date.split('-');var d=new Date(parts[0],parts[1],parts[2].split('T')[0]);return d.toDateString();};var Scan=function Scan(props){return React.createElement(_List,{grid:{gutter:16,xs:1,sm:2,md:4,lg:4,xl:6,xxl:6},pagination:{onChange:function onChange(page){// console.log(page);\n},pageSize:10},dataSource:props.data,renderItem:function renderItem(item){return React.createElement(_List.Item,null,React.createElement(Link,{to:\"scan/\"+item.pk},React.createElement(_Card,{// title={item.title}\nhoverable:true,loading:item?false:true,cover:React.createElement(_Progress,{type:\"circle\",percent:item.fields.matchpercent?item.fields.matchpercent*100:0}),actions:[React.createElement(EditOutlined,{key:\"edit\"}),React.createElement(DeleteOutlined,{key:\"delete\"})]},React.createElement(Meta// avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n,{title:item.fields.title?item.fields.title:\"No position details\",description:\"Created on \"+parseDate(item.fields.posted_date)}))));}});};export default Scan;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/components/Scan.js"],"names":["React","EditOutlined","DeleteOutlined","Link","Meta","parseDate","date","parts","split","d","Date","toDateString","Scan","props","gutter","xs","sm","md","lg","xl","xxl","onChange","page","pageSize","data","item","pk","fields","matchpercent","title","posted_date"],"mappings":"6LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,mBAA7C,CAEA,OAAQC,IAAR,KAAoB,kBAApB,CAEA;GAEQC,CAAAA,I,OAAAA,I,CAER,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CACxB,GAAIC,CAAAA,KAAK,CAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAZ,CACA,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,CAASH,KAAK,CAAC,CAAD,CAAd,CAAmBA,KAAK,CAAC,CAAD,CAAxB,CAA6BA,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAA7B,CAAR,CACA,MAAOC,CAAAA,CAAC,CAACE,YAAF,EAAP,CACH,CAJD,CAKA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACpB,MACI,4BACA,IAAI,CAAE,CACJC,MAAM,CAAE,EADJ,CAEJC,EAAE,CAAE,CAFA,CAGJC,EAAE,CAAE,CAHA,CAIJC,EAAE,CAAE,CAJA,CAKJC,EAAE,CAAE,CALA,CAMJC,EAAE,CAAE,CANA,CAOJC,GAAG,CAAE,CAPD,CADN,CAWA,UAAU,CAAE,CACRC,QAAQ,CAAE,kBAAAC,IAAI,CAAI,CACd;AACH,CAHO,CAIRC,QAAQ,CAAE,EAJF,CAXZ,CAiBA,UAAU,CAAEV,KAAK,CAACW,IAjBlB,CAkBA,UAAU,CAAE,oBAAAC,IAAI,QACd,2BAAM,IAAN,MAEE,oBAAC,IAAD,EAAM,EAAE,CAAE,QAAUA,IAAI,CAACC,EAAzB,EACA,2BACA;AACA,SAAS,KAFT,CAGA,OAAO,CAAED,IAAI,CAAG,KAAH,CAAW,IAHxB,CAMJ,KAAK,CACD,+BAAU,IAAI,CAAC,QAAf,CAAwB,OAAO,CAAEA,IAAI,CAACE,MAAL,CAAYC,YAAZ,CAA0BH,IAAI,CAACE,MAAL,CAAYC,YAAZ,CAAyB,GAAnD,CAAyD,CAA1F,EAPA,CAUF,OAAO,CAAE,CACP,oBAAC,YAAD,EAAc,GAAG,CAAC,MAAlB,EADO,CAEP,oBAAC,cAAD,EAAgB,GAAG,CAAC,QAApB,EAFO,CAVP,EAgBA,oBAAC,IACG;AADJ,EAEI,KAAK,CAAGH,IAAI,CAACE,MAAL,CAAYE,KAAZ,CAAoBJ,IAAI,CAACE,MAAL,CAAYE,KAAhC,CAAwC,qBAFpD,CAGI,WAAW,CAAE,cAAgBxB,SAAS,CAACoB,IAAI,CAACE,MAAL,CAAYG,WAAb,CAH1C,EAhBA,CADA,CAFF,CADc,EAlBhB,EADJ,CAkDH,CAnDD,CAqDA,cAAelB,CAAAA,IAAf","sourcesContent":["import React from 'react';\r\nimport { List } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Card,Progress } from 'antd';\r\nimport {Link } from 'react-router-dom';\r\n\r\n// {id, projectid, userid, jobid, matchpercent}\r\n\r\nconst { Meta } = Card;\r\n\r\nconst parseDate = (date) => {\r\n    var parts = date.split('-')\r\n    var d = new Date(parts[0], parts[1], parts[2].split('T')[0]);\r\n    return d.toDateString();\r\n}\r\nconst Scan = (props) => {\r\n    return (\r\n        <List\r\n        grid={{\r\n          gutter: 16,\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 4,\r\n          lg: 4,\r\n          xl: 6,\r\n          xxl: 6,\r\n        }}\r\n        \r\n        pagination={{\r\n            onChange: page => {\r\n                // console.log(page);\r\n            },\r\n            pageSize: 10,\r\n            }}\r\n        dataSource={props.data}\r\n        renderItem={item => (\r\n          <List.Item>\r\n\r\n            <Link to={\"scan/\" + item.pk}>\r\n            <Card \r\n            // title={item.title}\r\n            hoverable\r\n            loading={item ? false : true}\r\n\r\n\r\n        cover={\r\n            <Progress type=\"circle\" percent={item.fields.matchpercent? item.fields.matchpercent*100 : 0} />\r\n          }\r\n\r\n          actions={[\r\n            <EditOutlined key=\"edit\" />,\r\n            <DeleteOutlined key=\"delete\" />,\r\n          ]}\r\n        >\r\n            \r\n            <Meta\r\n                // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                title= {item.fields.title ? item.fields.title : \"No position details\"}\r\n                description={\"Created on \" + parseDate(item.fields.posted_date)}\r\n            />\r\n            </Card>\r\n            </Link>\r\n          </List.Item>\r\n        )}\r\n      />\r\n  )\r\n}\r\n\r\nexport default Scan;"]},"metadata":{},"sourceType":"module"}
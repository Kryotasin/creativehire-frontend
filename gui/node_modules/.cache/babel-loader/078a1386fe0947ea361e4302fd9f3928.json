{"ast":null,"code":"import\"antd/es/popover/style\";import _Popover from\"antd/es/popover\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/checkbox/style\";import _Checkbox from\"antd/es/checkbox\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import\"antd/es/alert/style\";import _Alert from\"antd/es/alert\";import _classCallCheck from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import*as actions from'../store/actions/auth';import{connect}from'react-redux';import{NavLink}from'react-router-dom';var formItemLayout={labelCol:{xs:{span:24},sm:{span:8}},wrapperCol:{xs:{span:24},sm:{span:16}}};var tailLayout={wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}};var RegistrationForm=/*#__PURE__*/function(_React$Component){_inherits(RegistrationForm,_React$Component);function RegistrationForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,RegistrationForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.errorParts=[];_this.state={agreementChecked:false};return _this;}_createClass(RegistrationForm,[{key:\"componentDidMount\",value:function componentDidMount(){if(localStorage.getItem('token')){this.props.history.push('/');}}},{key:\"render\",value:function render(){var _this2=this;var onFinish=function onFinish(values){_this2.props.onAuth(values.username,values.email,values.password,values.confirm);};var errorMessage=null;var getErrorValues=function getErrorValues(){if(_this2.props.error){Object.entries(_this2.props.error).map(function(key,value){for(var i=0;i<=value;i++){_this2.errorParts.push(key[1][i]);}});}};if(this.props.error){getErrorValues();this.errorParts.forEach(function(element){if(element){errorMessage=React.createElement(_Alert,Object.assign({},tailLayout,{message:\"Registration failed!\",description:element,type:\"error\",showIcon:true}));}});}return React.createElement(_Form,Object.assign({},formItemLayout,{name:\"register\",onFinish:onFinish,scrollToFirstError:true}),React.createElement(_Form.Item,{label:\"Username\",name:\"username\",rules:[{required:true,message:'Please input your username!'}]},React.createElement(_Input,null)),React.createElement(_Form.Item,{name:\"email\",label:\"E-mail\",rules:[{type:'email',message:'The input is not valid E-mail!'},{required:true,message:'Please input your E-mail!'}]},React.createElement(_Input,null)),React.createElement(_Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'}],hasFeedback:true},React.createElement(_Input.Password,null)),React.createElement(_Form.Item,{name:\"confirm\",label:\"Confirm Password\",dependencies:['password'],hasFeedback:true,rules:[{required:true,message:'Please confirm your password!'},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(rule,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject('The two passwords that you entered do not match!');}};}]},React.createElement(_Input.Password,null)),React.createElement(_Form.Item,Object.assign({name:\"agreement\",valuePropName:\"checked\"},tailLayout),React.createElement(_Checkbox,{defaultChecked:true,onChange:function onChange(){_this2.setState({agreementChecked:!_this2.state.agreementChecked});}},\"I have read the \",React.createElement(\"a\",{href:\"terms\"},\"agreement\"))),React.createElement(_Form.Item,tailLayout,!this.state.agreementChecked?React.createElement(_Popover,{content:\"You need to the agree to the Terms and Conditions.\"},React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",disabled:!this.state.agreementChecked},\"Signup\")):React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",disabled:!this.state.agreementChecked},\"Signup\"),\"Or\",React.createElement(NavLink,{style:{marginRight:'10px'},to:\"/login/\"},\" Login\")),errorMessage);}}]);return RegistrationForm;}(React.Component);;var mapStateToProps=function mapStateToProps(state){return{loading:state.loading,error:state.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(username,email,password1,password2){return dispatch(actions.authSignup(username,email,password1,password2));}};};export default connect(mapStateToProps,mapDispatchToProps)(RegistrationForm);","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Signup.js"],"names":["React","actions","connect","NavLink","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","RegistrationForm","errorParts","state","agreementChecked","localStorage","getItem","props","history","push","onFinish","values","onAuth","username","email","password","confirm","errorMessage","getErrorValues","error","Object","entries","map","key","value","i","forEach","element","required","message","type","getFieldValue","validator","rule","Promise","resolve","reject","setState","marginRight","Component","mapStateToProps","loading","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Alert,\r\n  Popover\r\n} from 'antd';\r\n\r\nimport * as actions from '../store/actions/auth';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n  errorParts = []\r\n  state = {\r\n    agreementChecked: false\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    if(localStorage.getItem('token')){\r\n        this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n\r\n\r\n        render(){\r\n            const onFinish = values => {\r\n              this.props.onAuth(\r\n                  values.username,\r\n                  values.email,\r\n                  values.password,\r\n                  values.confirm\r\n              );\r\n            };\r\n\r\n            let errorMessage = null;\r\n\r\n            const getErrorValues = () => {\r\n              if(this.props.error){\r\n                Object.entries(this.props.error).map((key, value) => {\r\n                  for(var i=0;i<=value;i++){\r\n                    this.errorParts.push(key[1][i]);\r\n                  }\r\n                })\r\n              }\r\n            }\r\n\r\n            if(this.props.error){\r\n              getErrorValues();\r\n              this.errorParts.forEach(element => {\r\n                if(element){\r\n                  errorMessage = (\r\n                    <Alert {...tailLayout} message = \"Registration failed!\" description = {element} type='error' showIcon />\r\n                  )     \r\n                }\r\n            });\r\n            }\r\n\r\n            return (\r\n                <Form\r\n                  {...formItemLayout}\r\n                  name=\"register\"\r\n                  onFinish={onFinish}\r\n                  scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                              label=\"Username\"\r\n                              name=\"username\"\r\n                              rules={[\r\n                              {\r\n                                  required: true,\r\n                                  message: 'Please input your username!',\r\n                              },\r\n                              ]}\r\n                          >\r\n                              <Input />\r\n                    </Form.Item>    \r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    label=\"E-mail\"\r\n                    rules={[\r\n                      {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                          if (!value || getFieldValue('password') === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n            \r\n                          return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item name=\"agreement\" valuePropName=\"checked\" {...tailLayout}>\r\n                    <Checkbox\r\n                      defaultChecked={true}\r\n                      onChange = {() => {\r\n                        this.setState({\r\n                          agreementChecked: !this.state.agreementChecked\r\n                        });\r\n                      }}\r\n                    >\r\n                      I have read the <a href=\"terms\">agreement</a>\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item {...tailLayout}>\r\n\r\n                    {!this.state.agreementChecked ? \r\n                      <Popover content='You need to the agree to the Terms and Conditions.'>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled = {!this.state.agreementChecked}>\r\n                                  Signup\r\n                        </Button>\r\n                     </Popover>\r\n                     :\r\n                      <Button type=\"primary\" htmlType=\"submit\" disabled = {!this.state.agreementChecked}>\r\n                        Signup\r\n                      </Button>\r\n                  }\r\n                    Or\r\n                    <NavLink style={{marginRight: '10px'}} \r\n                    to='/login/'> Login\r\n                    </NavLink>\r\n              </Form.Item>\r\n                          {errorMessage}\r\n                </Form>\r\n              );\r\n        }\r\n \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Signup.js\";\nimport React from 'react';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nclass RegistrationForm extends React.Component {\n  componentDidMount() {\n    if (localStorage.getItem('token')) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    const onFinish = values => {\n      this.props.onAuth(values.username, values.email, values.password, values.confirm);\n    };\n\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      name: \"register\",\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(_Form.Item, Object.assign({\n      name: \"agreement\",\n      valuePropName: \"checked\"\n    }, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"I have read the \", React.createElement(\"a\", {\n      href: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"agreement\"))), React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Signup\"), \" Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/login/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" Login\")));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Signup.js"],"names":["React","actions","connect","NavLink","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","Component","componentDidMount","localStorage","getItem","props","history","push","render","onFinish","values","onAuth","username","email","password","confirm","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","marginRight","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE;AADJ,KADI;AAIRC,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE;AADJ;AAJI,GADW;AASrBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE;AADJ,KADM;AAIVC,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE;AADJ;AAJM;AATS,CAAvB;AAmBA,MAAMG,kBAAkB,GAAG;AACvBD,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFI,MAAAA,MAAM,EAAE;AAFN,KADM;AAKVH,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE,EADJ;AAEFI,MAAAA,MAAM,EAAE;AAFN;AALM;AADW,CAA3B;;AAcA,MAAMC,gBAAN,SAA+BZ,KAAK,CAACa,SAArC,CAA+C;AAG7CC,EAAAA,iBAAiB,GAAE;AAEjB,QAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACF;;AAMKC,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzB,WAAKL,KAAL,CAAWM,MAAX,CACID,MAAM,CAACE,QADX,EAEIF,MAAM,CAACG,KAFX,EAGIH,MAAM,CAACI,QAHX,EAIIJ,MAAM,CAACK,OAJX;AAMD,KAPD;;AASA,WACI,6CACMvB,cADN;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAEiB,QAHZ;AAIE,MAAA,kBAAkB,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMI,0BAAM,IAAN;AACU,MAAA,KAAK,EAAC,UADhB;AAEU,MAAA,IAAI,EAAC,UAFf;AAGU,MAAA,KAAK,EAAE,CACP;AACIO,QAAAA,QAAQ,EAAE,IADd;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADO,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVV,CANJ,EAkBE,0BAAM,IAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,OADR;AAEED,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAlBF,EAmCE,0BAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AASE,MAAA,WAAW,MATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,2BAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAnCF,EAiDE,0BAAM,IAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAC,kBAFR;AAGE,MAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL,CAAC;AAAEE,QAAAA;AAAF,OAAD,MAAwB;AACtBC,QAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,cAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AACjD,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AAED,iBAAOD,OAAO,CAACE,MAAR,CAAe,kDAAf,CAAP;AACD;;AAPqB,OAAxB,CALK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBE,2BAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CAjDF,EAyEE,0BAAM,IAAN;AAAW,MAAA,IAAI,EAAC,WAAhB;AAA4B,MAAA,aAAa,EAAC;AAA1C,OAAwD3B,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACkB;AAAG,MAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADlB,CADF,CAzEF,EA+EE,0BAAM,IAAN,oBAAeA,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACY;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ,SAIY,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAC4B,QAAAA,WAAW,EAAE;AAAd,OAAhB;AACA,MAAA,EAAE,EAAC,SADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJZ,CA/EF,CADJ;AA0FH;;AAlHsC;;AAoH9C;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHrB,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,EAAkBoB,SAAlB,EAA6BC,SAA7B,KAA2CF,QAAQ,CAAC3C,OAAO,CAAC8C,UAAR,CAAmBvB,QAAnB,EAA6BC,KAA7B,EAAoCoB,SAApC,EAA+CC,SAA/C,CAAD;AADxD,GAAP;AAGH,CAJD;;AAMA,eAAe5C,OAAO,CAACqC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C/B,gBAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n} from 'antd';\r\n\r\nimport * as actions from '../store/actions/auth';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    if(localStorage.getItem('token')){\r\n        this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  componentDidUpdate\r\n\r\n\r\n\r\n        render(){\r\n            const onFinish = values => {\r\n              this.props.onAuth(\r\n                  values.username,\r\n                  values.email,\r\n                  values.password,\r\n                  values.confirm\r\n              );\r\n            };\r\n\r\n            return (\r\n                <Form\r\n                  {...formItemLayout}\r\n                  name=\"register\"\r\n                  onFinish={onFinish}\r\n                  scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                              label=\"Username\"\r\n                              name=\"username\"\r\n                              rules={[\r\n                              {\r\n                                  required: true,\r\n                                  message: 'Please input your username!',\r\n                              },\r\n                              ]}\r\n                          >\r\n                              <Input />\r\n                    </Form.Item>    \r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    label=\"E-mail\"\r\n                    rules={[\r\n                      {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                          if (!value || getFieldValue('password') === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n            \r\n                          return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item name=\"agreement\" valuePropName=\"checked\" {...tailFormItemLayout}>\r\n                    <Checkbox>\r\n                      I have read the <a href=\"terms\">agreement</a>\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item {...tailFormItemLayout}>\r\n                              <Button type=\"primary\" htmlType=\"submit\">\r\n                                Signup\r\n                              </Button> Or\r\n                              <NavLink style={{marginRight: '10px'}} \r\n                              to='/login/'> Login\r\n                              </NavLink>\r\n                          </Form.Item>\r\n                </Form>\r\n              );\r\n        }\r\n \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);"]},"metadata":{},"sourceType":"module"}
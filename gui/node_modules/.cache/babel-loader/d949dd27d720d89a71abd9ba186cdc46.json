{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  console.log(\"Logging out before\");\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  console.log(\"Logging out after\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const dispatchLogout = () => {\n  return dispatch => {\n    dispatch(logout());\n  };\n};\nexport const checkAuthTimeout = expirationDate => {\n  return dispatch => {\n    setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    console.log(username, password1, password2, email);\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n      username: username,\n      password1: password1,\n      password2: password2,\n      email: email\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      console.log(expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n        console.log(\"Here, logging out\");\n      } else {\n        dispatch(authSuccess(token));\n        console.log(\"Here, not logging out\");\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n        console.log(expirationDate);\n        console.log(localStorage.getItem('token'));\n        console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","console","log","localStorage","removeItem","AUTH_LOGOUT","dispatchLogout","dispatch","checkAuthTimeout","expirationDate","setTimeout","authLogin","username","password","post","then","res","data","key","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart =() => {\r\n    return{\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    console.log(\"Logging out before\");\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    console.log(\"Logging out after\");\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const dispatchLogout = () => {\r\n    return dispatch => {\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationDate => {\r\n    return dispatch => {\r\n        setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/login/',{\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then (res => {\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        console.log(username, password1, password2, email);\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/',{\r\n            username: username,\r\n            password1: password1,\r\n            password2: password2,\r\n            email: email\r\n        })\r\n        .then (res => {\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === undefined) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            \r\n            console.log(expirationDate);\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n                console.log(\"Here, logging out\");\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token));\r\n                console.log(\"Here, not logging out\");\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n           \r\n                console.log(expirationDate);\r\n                console.log(localStorage.getItem('token'));\r\n                console.log((expirationDate.getTime() - new Date().getTime())/1000); }\r\n                \r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
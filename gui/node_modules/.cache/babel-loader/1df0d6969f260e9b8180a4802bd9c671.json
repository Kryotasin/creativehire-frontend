{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Avatar, Upload, Button, message, Skeleton } from 'antd';\nimport axios from 'axios';\nimport { UserOutlined, UploadOutlined } from '@ant-design/icons';\n\nfunction UserProfile() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [img_salt, setImgSalt] = useState('');\n\n  const typeOfImage = proc => {\n    return {\n      \"type\": \"profile_pic\",\n      \"process\": proc\n    };\n  };\n\n  const userProfilePictureUploadProps = {\n    name: 'file',\n    acceptedFiles: '.png',\n    multiple: false,\n    method: 'post',\n    data: typeOfImage(\"upload\"),\n    action: 'http://127.0.0.1:8000/image-handler/',\n\n    onRemove(file) {\n      console.log(file);\n      axios.post('http://127.0.0.1:8000/image-handler/', {\n        \"file\": file.name,\n        ...typeOfImage('remove')\n      });\n    },\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== 'uploading') {// console.log(info.file, info.fileList);\n      }\n\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n        reloadProfilePic();\n      }\n    }\n\n  };\n\n  const getProfile = () => {\n    axios.get('http://localhost:8000/userprofile/profile/' + localStorage.getItem('userProfileID')).then(res => {\n      var result = Object.keys(res.data).map(function (key) {\n        return [Number(key), res.data[key]];\n      });\n      reloadProfileDetail(result);\n      setTimeout(() => console.log(result), 100);\n    }).catch(err => {\n      message.error(`Your profile could not be loaded due to ` + err.message);\n    });\n  };\n\n  const reloadImgSalt = data => {\n    setC(data);\n  };\n\n  useEffect(() => {\n    getProfile();\n    reloadProfilePic();\n  }, []);\n  return React.createElement(Row, {\n    align: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 5,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    shape: \"square\",\n    size: \"large\",\n    icon: profile_pic == null ? React.createElement(UserOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : '',\n    src: profile_pic == null ? '' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Row, {\n    style: {\n      margin: '50px 0px',\n      verticalAlign: 'middle'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Upload, Object.assign({}, userProfilePictureUploadProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Change\")))), React.createElement(Col, {\n    xs: {\n      span: 11,\n      offset: 1\n    },\n    lg: {\n      span: 12,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, profile == null ? React.createElement(Skeleton, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : 'form'), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, profile), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Click me\"));\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Profile.js"],"names":["React","useState","useEffect","Row","Col","Avatar","Upload","Button","message","Skeleton","axios","UserOutlined","UploadOutlined","UserProfile","username","setUsername","email","setEmail","name","setName","location","setLocation","img_salt","setImgSalt","typeOfImage","proc","userProfilePictureUploadProps","acceptedFiles","multiple","method","data","action","onRemove","file","console","log","post","onChange","info","status","success","error","reloadProfilePic","getProfile","get","localStorage","getItem","then","res","result","Object","keys","map","key","Number","reloadProfileDetail","setTimeout","catch","err","reloadImgSalt","setC","span","offset","profile_pic","margin","verticalAlign","profile","count","setCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\r\nimport { Row, Col, Avatar, Upload, Button, message, Skeleton } from 'antd';\r\nimport axios from 'axios';\r\nimport { UserOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\nfunction UserProfile() {\r\n\r\n    const[username, setUsername] = useState('');\r\n    const[email, setEmail] = useState('');\r\n    const[name, setName] = useState('');\r\n    const[location, setLocation] = useState('');\r\n    const[img_salt, setImgSalt] = useState('');\r\n\r\n\r\n    const typeOfImage = (proc) => {\r\n        return {\"type\" : \"profile_pic\", \"process\": proc}\r\n    }\r\n    \r\n    const userProfilePictureUploadProps = {\r\n        name: 'file',\r\n        acceptedFiles: '.png',\r\n        multiple: false,\r\n        method: 'post',\r\n        data: typeOfImage(\"upload\"),\r\n        action: 'http://127.0.0.1:8000/image-handler/',\r\n        onRemove(file){\r\n\r\n            console.log(file);\r\n            \r\n            axios.post('http://127.0.0.1:8000/image-handler/', {\r\n                \"file\": file.name,\r\n                ...typeOfImage('remove')\r\n            });\r\n\r\n        },\r\n        \r\n        onChange(info) {\r\n          const { status } = info.file;\r\n          if (status !== 'uploading') {\r\n            // console.log(info.file, info.fileList);\r\n          }\r\n          if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n          } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n\r\n            reloadProfilePic();\r\n          }\r\n        },\r\n      };\r\n\r\n      const getProfile = () => {\r\n        axios.get('http://localhost:8000/userprofile/profile/' + localStorage.getItem('userProfileID'))\r\n        .then( res => {\r\n            var result = Object.keys(res.data).map(function(key) {\r\n                return [Number(key), res.data[key]];\r\n              });\r\n            reloadProfileDetail(result);\r\n            setTimeout(() => console.log(result), 100);\r\n            }\r\n        )\r\n        .catch(err => {\r\n            message.error(`Your profile could not be loaded due to ` + err.message);\r\n        })\r\n      }\r\n\r\n      const reloadImgSalt = (data) => {\r\n        setC(data);\r\n      }\r\n\r\n      useEffect(() => {\r\n        getProfile();\r\n        reloadProfilePic();\r\n      }, []); \r\n\r\n\r\n        return (\r\n            <Row align=\"top\">\r\n            <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n            <Avatar shape=\"square\" size=\"large\" icon={profile_pic == null ? <UserOutlined /> : ''} src={profile_pic == null ? '' : ''}/>\r\n            \r\n            <Row\r\n            style={{ margin: '50px 0px', verticalAlign: 'middle' }}>\r\n                <Upload {...userProfilePictureUploadProps}>\r\n                <Button\r\n                    size=\"small\">\r\n                    Change\r\n                </Button>\r\n                </Upload>\r\n            </Row>\r\n           \r\n            </Col>\r\n            <Col xs={{ span: 11, offset: 1 }} lg={{ span: 12, offset: 2 }}>\r\n                {profile == null ? <Skeleton active /> : 'form'}\r\n            </Col>\r\n            <p>You clicked {count} times</p>\r\n            <p>{profile}</p>\r\n            <button onClick={() => setCount(count + 1)}>\r\n                Click me\r\n            </button>\r\n          </Row>\r\n        )\r\n}\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/auth';\naxios.defaults.baseURL = process.env.REACT_APP_BE_URL;\naxios.interceptors.request.use(request => {\n  console.log(request); // Edit request config\n\n  return request;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  console.log(response); // Edit response config\n\n  return response;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nconst composeEnhancer = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nconst app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","axios","createStore","compose","applyMiddleware","thunk","Provider","reducer","defaults","baseURL","process","env","REACT_APP_BE_URL","interceptors","request","use","console","log","error","Promise","reject","response","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAGA,OAAOC,OAAP,MAAoB,uBAApB;AAEAN,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,gBAArC;AAEAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AACtCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EADsC,CAEtC;;AACA,SAAOA,OAAP;AACH,CAJD,EAIGI,KAAK,IAAI;AACRF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AASAjB,KAAK,CAACY,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAgCM,QAAQ,IAAI;AACxCL,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ,EADwC,CAExC;;AACA,SAAOA,QAAP;AACH,CAJD,EAIGH,KAAK,IAAI;AACRF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AAWA,MAAMI,eAAe,GAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,oCAAzC,IAAkFrB,OAA1G;AAEA,MAAMsB,KAAK,GAAGvB,WAAW,CAACK,OAAD,EAAUe,eAAe,CAC9ClB,eAAe,CAACC,KAAD,CAD+B,CAAzB,CAAzB;AAIA,MAAMqB,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;AAMA3B,QAAQ,CAAC6B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACA7B,aAAa,CAAC8B,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from 'axios';\r\n\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nimport reducer from './store/reducers/auth';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BE_URL;\r\n\r\naxios.interceptors.request.use(request => {\r\n    console.log(request);\r\n    // Edit request config\r\n    return request;\r\n}, error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\naxios.interceptors.response.use(response => {\r\n    console.log(response);\r\n    // Edit response config\r\n    return response;\r\n}, error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\n\r\nconst composeEnhancer = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancer(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Form, Input, Row, Col, Avatar, Upload, Button, message, Skeleton, Space, Typography } from 'antd';\nimport axios from 'axios';\nimport { UserOutlined, UploadOutlined } from '@ant-design/icons';\nconst [username, setUsername] = useState('');\nconst [email, setEmail] = useState('');\nconst [name, setName] = useState('');\nconst [location, setLocation] = useState('');\nconst [img_salt, setImgSalt] = useState('');\nconst {\n  Text\n} = Typography;\n\nconst typeOfImage = proc => {\n  return {\n    \"type\": \"profile_pic\",\n    \"process\": proc\n  };\n};\n\nconst userProfilePictureUploadProps = {\n  name: 'file',\n  acceptedFiles: '.png',\n  multiple: false,\n  method: 'post',\n  data: typeOfImage(\"upload\"),\n  action: 'http://127.0.0.1:8000/image-handler/',\n\n  onRemove(file) {\n    console.log(file);\n    axios.post('http://127.0.0.1:8000/image-handler/', {\n      \"file\": file.name,\n      ...typeOfImage('remove')\n    });\n  },\n\n  onChange(info) {\n    const {\n      status\n    } = info.file;\n\n    if (status !== 'uploading') {// console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`); // Reload image\n\n      reloadProfilePicture();\n    }\n  }\n\n};\n\nconst getProfile = () => {\n  axios.get('http://localhost:8000/userprofile/profile/' + localStorage.getItem('userProfileID')).then(res => {\n    // Load all profile data\n    reloadUsername(res.data['username']);\n    reloadEmail(res.data['email']);\n    reloadName(res.data['name']);\n    reloadLocation(res.data['location']);\n    reloadImgSalt(res.data['img_salt']);\n    setTimeout(() => message.success('Profile loaded successfully.'), 100);\n  }).catch(err => {\n    message.error(`Your profile could not be loaded due to ` + err.message);\n  });\n};\n\nconst reloadUsername = data => {\n  setUsername(data);\n};\n\nconst reloadEmail = data => {\n  setEmail(data);\n};\n\nconst reloadName = data => {\n  setName(data);\n};\n\nconst reloadLocation = data => {\n  setLocation(data);\n};\n\nconst reloadImgSalt = data => {\n  setImgSalt(data);\n};\n\nconst reloadProfilePicture = () => {};\n\nconst CollectionCreateForm = ({\n  visible,\n  onCreate,\n  onCancel\n}) => {\n  const [form] = Form.useForm();\n  return React.createElement(Modal, {\n    visible: visible,\n    title: \"Create a new collection\",\n    okText: \"Create\",\n    cancelText: \"Cancel\",\n    onCancel: onCancel,\n    onOk: () => {\n      form.validateFields().then(values => {\n        form.resetFields();\n        onCreate(values);\n      }).catch(info => {\n        console.log('Validate Failed:', info);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    name: \"form_in_modal\",\n    initialValues: {\n      modifier: 'public'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    name: \"title\",\n    label: \"Title\",\n    rules: [{\n      required: true,\n      message: 'Please input the title of collection!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"description\",\n    label: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))));\n};\n\nfunction UserProfile() {\n  const [visible, setVisible] = useState(false);\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Row, {\n    gutter: [8, 48],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    shape: \"square\",\n    size: \"large\",\n    icon: img_salt == null ? React.createElement(UserOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : '',\n    src: img_salt == null ? '' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: {\n      span: 5,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Your Profile\"))), React.createElement(Row, {\n    gutter: [8, 20],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Upload, Object.assign({}, userProfilePictureUploadProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Change\"))), React.createElement(Col, {\n    xs: {\n      span: 8,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Space, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, username == null ? React.createElement(Text, {\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"No username found!\") : username)))), React.createElement(Row, {\n    gutter: [8, 20],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: {\n      span: 8,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Space, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, name == null ? React.createElement(Text, {\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"No name found!\") : name)))), React.createElement(Row, {\n    gutter: [8, 20],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: {\n      span: 8,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Space, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, email == null ? React.createElement(Skeleton, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }) : email)))), React.createElement(Row, {\n    gutter: [8, 20],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: {\n      span: 8,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Space, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Location: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, location == null ? React.createElement(Text, {\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"No location set!\") : location)))), React.createElement(Row, {\n    gutter: [8, 20],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 6,\n      offset: 2\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: {\n      span: 8,\n      offset: 1\n    },\n    lg: {\n      span: 6,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClickCapture: () => setVisible(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Edit\"))), React.createElement(CollectionCreateForm, {\n    visible: visible,\n    onCreate: onCreate,\n    onCancel: () => {\n      setVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }));\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Profile.js"],"names":["React","useState","useEffect","Modal","Form","Input","Row","Col","Avatar","Upload","Button","message","Skeleton","Space","Typography","axios","UserOutlined","UploadOutlined","username","setUsername","email","setEmail","name","setName","location","setLocation","img_salt","setImgSalt","Text","typeOfImage","proc","userProfilePictureUploadProps","acceptedFiles","multiple","method","data","action","onRemove","file","console","log","post","onChange","info","status","success","error","reloadProfilePicture","getProfile","get","localStorage","getItem","then","res","reloadUsername","reloadEmail","reloadName","reloadLocation","reloadImgSalt","setTimeout","catch","err","CollectionCreateForm","visible","onCreate","onCancel","form","useForm","validateFields","values","resetFields","modifier","required","UserProfile","setVisible","span","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\r\nimport { Modal, Form, Input, Row, Col, Avatar, Upload, Button, message, Skeleton, Space, Typography  } from 'antd';\r\nimport axios from 'axios';\r\nimport { UserOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n    const[username, setUsername] = useState('');\r\n    const[email, setEmail] = useState('');\r\n    const[name, setName] = useState('');\r\n    const[location, setLocation] = useState('');\r\n    const[img_salt, setImgSalt] = useState('');\r\n\r\n    const { Text } = Typography;\r\n\r\n\r\n    const typeOfImage = (proc) => {\r\n        return {\"type\" : \"profile_pic\", \"process\": proc}\r\n    }\r\n    \r\n    const userProfilePictureUploadProps = {\r\n        name: 'file',\r\n        acceptedFiles: '.png',\r\n        multiple: false,\r\n        method: 'post',\r\n        data: typeOfImage(\"upload\"),\r\n        action: 'http://127.0.0.1:8000/image-handler/',\r\n        onRemove(file){\r\n\r\n            console.log(file);\r\n            \r\n            axios.post('http://127.0.0.1:8000/image-handler/', {\r\n                \"file\": file.name,\r\n                ...typeOfImage('remove')\r\n            });\r\n\r\n        },\r\n        \r\n        onChange(info) {\r\n          const { status } = info.file;\r\n          if (status !== 'uploading') {\r\n            // console.log(info.file, info.fileList);\r\n          }\r\n          if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n          } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n            // Reload image\r\n            \r\n            reloadProfilePicture();\r\n          }\r\n        },\r\n      };\r\n\r\n    const getProfile = () => {\r\n    axios.get('http://localhost:8000/userprofile/profile/' + localStorage.getItem('userProfileID'))\r\n    .then( res => {\r\n        // Load all profile data\r\n\r\n\r\n        reloadUsername(res.data['username']);\r\n        reloadEmail(res.data['email']);\r\n        reloadName(res.data['name']);\r\n        reloadLocation(res.data['location']);\r\n        reloadImgSalt(res.data['img_salt']);\r\n\r\n\r\n\r\n        setTimeout(() => message.success('Profile loaded successfully.'), 100);\r\n        }\r\n    )\r\n    .catch(err => {\r\n        message.error(`Your profile could not be loaded due to ` + err.message);\r\n    })\r\n    }\r\n\r\n    const reloadUsername = (data) => {\r\n        setUsername(data);\r\n    }\r\n\r\n    const reloadEmail = (data) => {\r\n        setEmail(data);\r\n    }\r\n\r\n    const reloadName = (data) => {\r\n        setName(data);\r\n    }\r\n\r\n    const reloadLocation = (data) => {\r\n        setLocation(data);\r\n    }\r\n\r\n    const reloadImgSalt = (data) => {\r\n        setImgSalt(data);\r\n    }\r\n\r\n    const reloadProfilePicture = () => {\r\n\r\n    }\r\n\r\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n        const [form] = Form.useForm();\r\n        return (\r\n          <Modal\r\n            visible={visible}\r\n            title=\"Create a new collection\"\r\n            okText=\"Create\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n              form\r\n                .validateFields()\r\n                .then(values => {\r\n                  form.resetFields();\r\n                  onCreate(values);\r\n                })\r\n                .catch(info => {\r\n                  console.log('Validate Failed:', info);\r\n                });\r\n            }}\r\n          >\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              name=\"form_in_modal\"\r\n              initialValues={{\r\n                modifier: 'public',\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input the title of collection!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"description\" label=\"Description\">\r\n                <Input type=\"textarea\" />\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        );\r\n      };\r\n\r\n\r\n    function UserProfile() {\r\n        const [visible, setVisible] = useState(false);\r\n    \r\n      \r\n        const onCreate = values => {\r\n            console.log('Received values of form: ', values);\r\n            setVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getProfile();\r\n    }, []); \r\n\r\n\r\n    return (\r\n            <div>   \r\n                <Row gutter={[8, 48]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Avatar shape=\"square\" size=\"large\" icon={img_salt == null ? <UserOutlined /> : ''} src={img_salt == null ? '' : ''}/>\r\n                    </Col>\r\n                    <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <h1>Your Profile</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Upload {...userProfilePictureUploadProps}>\r\n                            <Button\r\n                                size=\"small\">\r\n                                Change\r\n                            </Button>\r\n                        </Upload>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Username: </p>\r\n                            <p>{username == null ? <Text type=\"danger\">No username found!</Text> : username}</p>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Name: </p>\r\n                            <p>{name == null ? <Text type=\"danger\">No name found!</Text> : name}</p>\r\n                        </Space>                \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Email: </p>\r\n                            <p>{email == null ? <Skeleton active /> : email}</p>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Space size = \"large\">\r\n                            <p>Location: </p>\r\n                            <p>{location == null ? <Text type=\"danger\">No location set!</Text> : location}</p>\r\n                        </Space>                \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={[8, 20]}>\r\n                    <Col xs={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 8, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                        <Button type=\"primary\" onClickCapture={() => setVisible(true)}>Edit</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                    <CollectionCreateForm\r\n                        visible={visible}\r\n                        onCreate={onCreate}\r\n                        onCancel={() => {\r\n                        setVisible(false);\r\n                        }}\r\n                    />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}
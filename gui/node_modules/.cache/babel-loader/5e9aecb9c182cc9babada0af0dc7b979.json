{"ast":null,"code":"import*as actionTypes from'./actionTypes';import axios from'../../axiosConfig';import'../../global';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token){return{type:actionTypes.AUTH_SUCCESS,token:token};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem('userProfileID');localStorage.removeItem('user');localStorage.removeItem('token');localStorage.removeItem('expirationDate');return{type:actionTypes.AUTH_LOGOUT};};export var dispatchLogout=function dispatchLogout(){return function(dispatch){dispatch(logout());};};export var checkAuthTimeout=function checkAuthTimeout(expirationDate){return function(dispatch){setTimeout(dispatchLogout,expirationDate*3600*1000*1000);};};export var setUserID=function setUserID(username,password){axios.post(\"authenticate/\",{username:username,password:password}).then(function(res){return localStorage.setItem('userProfileID',res.data.id);});};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());axios.post('api/v1/rest-auth/login/',{username:username,password:password}).then(function(res){setUserID(username,password);var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem('token',token);localStorage.setItem('expirationDate',expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err.response.data));});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());axios.post('api/v1/rest-auth/registration/',{username:username,password1:password1,password2:password2,email:email}).then(function(res){setUserID(username,password1);var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem('token',token);localStorage.setItem('expirationDate',expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err.response.data));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","dispatchLogout","dispatch","checkAuthTimeout","expirationDate","setTimeout","setUserID","username","password","post","then","res","setItem","data","id","authLogin","key","Date","getTime","catch","err","response","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axiosConfig';\r\nimport '../../global';\r\n\r\nexport const authStart =() => {\r\n    return{\r\n        type: actionTypes.AUTH_START,\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('userProfileID');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const dispatchLogout = () => {\r\n    return dispatch => {\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = expirationDate => {\r\n    return dispatch => {\r\n        setTimeout(dispatchLogout, expirationDate * 3600 * 1000 * 1000)\r\n    }\r\n}\r\n\r\nexport const setUserID = (username, password) => {\r\n        axios.post(\"authenticate/\", {\r\n                username: username,\r\n                password: password\r\n            }).then(res => localStorage.setItem('userProfileID', res.data.id))\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/login/',{\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then (res => {\r\n            setUserID(username, password);\r\n\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data));\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('api/v1/rest-auth/registration/',{\r\n            username: username,\r\n            password1: password1,\r\n            password2: password2,\r\n            email: email\r\n        })\r\n        .then (res => {\r\n            setUserID(username, password1);\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000 );\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data));\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === undefined) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            \r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n                \r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\creativehire\\\\frontend\\\\gui\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox, Spin } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport { LoadingOutlined } from '@ant-design/icons';\nconst antIcon = React.createElement(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n});\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    const onFinish = values => {\n      this.props.onAuth(values.username, values.password);\n      this.props.history.push('/');\n    };\n\n    const onFinishFailed = errorInfo => {};\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, errorMessage, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      ref: this.formRef,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Login\"), \" Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/signup/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" Signup\"))));\n  }\n\n} //const WrappedNormalLoginForm = this.forkmRef.create()(NormalLoginForm);\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["G:/Github/creativehire/frontend/gui/src/containers/Login.js"],"names":["React","Form","Input","Button","Checkbox","Spin","NavLink","connect","actions","LoadingOutlined","antIcon","fontSize","layout","labelCol","span","wrapperCol","tailLayout","offset","NormalLoginForm","Component","formRef","createRef","render","onFinish","values","props","onAuth","username","password","history","push","onFinishFailed","errorInfo","errorMessage","error","message","loading","remember","required","marginRight","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,IAAxC,QAAoD,MAApD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,OAAO,GAAG,oBAAC,eAAD;AAAiB,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAxB;AAA0C,EAAA,IAAI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AAQA,MAAME,UAAU,GAAG;AACjBD,EAAAA,UAAU,EAAE;AACVE,IAAAA,MAAM,EAAE,CADE;AAEVH,IAAAA,IAAI,EAAE;AAFI;AADK,CAAnB;;AAOA,MAAMI,eAAN,SAA8BlB,KAAK,CAACmB,SAApC,CAA8C;AAAA;AAAA;AAAA,SAE1CC,OAF0C,GAEhCpB,KAAK,CAACqB,SAAN,EAFgC;AAAA;;AAM5CC,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvB,WAAKC,KAAL,CAAWC,MAAX,CAAkBF,MAAM,CAACG,QAAzB,EAAmCH,MAAM,CAACI,QAA1C;AACA,WAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAHD;;AAKA,UAAMC,cAAc,GAAGC,SAAS,IAAI,CACnC,CADD;;AAGA,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAG,KAAKR,KAAL,CAAWS,KAAd,EAAoB;AAChBD,MAAAA,YAAY,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,OAArB,CADJ;AAGH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,YADL,EAIQ,KAAKR,KAAL,CAAWW,OAAX,GAEA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE1B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,GAOF,oBAAC,IAAD,oBACIE,MADJ;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,aAAa,EAAE;AACXyB,QAAAA,QAAQ,EAAE;AADC,OAHf;AAMA,MAAA,GAAG,EAAE,KAAKjB,OANV;AAOA,MAAA,QAAQ,EAAEG,QAPV;AAQA,MAAA,cAAc,EAAEQ,cARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACP;AACIO,QAAAA,QAAQ,EAAE,IADd;AAEIH,QAAAA,OAAO,EAAE;AAFb,OADO,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAVA,EAuBA,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACP;AACIG,QAAAA,QAAQ,EAAE,IADd;AAEIH,QAAAA,OAAO,EAAE;AAFb,OADO,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAvBA,EAoCA,oBAAC,IAAD,CAAM,IAAN,oBAAenB,UAAf;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,aAAa,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CApCA,EAwCA,oBAAC,IAAD,CAAM,IAAN,oBAAeA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,SAII,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACuB,QAAAA,WAAW,EAAE;AAAd,OAAhB;AACA,MAAA,EAAE,EAAC,UADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAxCA,CAXN,CADJ;AAgED;;AAxF2C,C,CA4F9C;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,OAAO,EAAEK,KAAK,CAACL,OADZ;AAEHF,IAAAA,KAAK,EAAEO,KAAK,CAACP;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjB,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwBe,QAAQ,CAACnC,OAAO,CAACoC,SAAR,CAAkBjB,QAAlB,EAA4BC,QAA5B,CAAD;AADrC,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAACiC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox, Spin } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nclass NormalLoginForm extends React.Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    \r\n\r\n  render() {\r\n\r\n    const onFinish = values => {\r\n        this.props.onAuth(values.username, values.password);\r\n        this.props.history.push('/');\r\n    };\r\n    \r\n    const onFinishFailed = errorInfo => {\r\n    };\r\n\r\n    let errorMessage = null;\r\n    if(this.props.error){\r\n        errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n        )\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {errorMessage}\r\n            {\r\n  \r\n                this.props.loading ?\r\n  \r\n                <Spin indicator={antIcon} />\r\n                \r\n                :\r\n  \r\n  \r\n              <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{\r\n                  remember: true,\r\n              }}\r\n              ref={this.formRef}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              >\r\n              <Form.Item\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your username!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input />\r\n              </Form.Item>\r\n  \r\n              <Form.Item\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                  {\r\n                      required: true,\r\n                      message: 'Please input your password!',\r\n                  },\r\n                  ]}\r\n              >\r\n                  <Input.Password />\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                  <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n  \r\n              <Form.Item {...tailLayout}>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                  Login\r\n                  </Button> Or\r\n                  <NavLink style={{marginRight: '10px'}} \r\n                  to='/signup/'> Signup\r\n                  </NavLink>\r\n              </Form.Item>\r\n              </Form>\r\n          }\r\n      </div>\r\n    );\r\n  } \r\n  \r\n}\r\n\r\n//const WrappedNormalLoginForm = this.forkmRef.create()(NormalLoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}